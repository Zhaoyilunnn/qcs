Randomly selected files:
/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//quantumwalks_n2/quantumwalks_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py 
==== Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//quantumwalks_n2/quantumwalks_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//quantumwalks_n2/quantumwalks_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7f609fd783a0>
qasm = '/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm...8/bb84_n8.qasm,/root/projects/QASMBench/small//qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)
    
        qasm_list = qasm.split(",")
        # circuit_list = [
        #     self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list
        # ]
        # process_list = [back_manager.compile(circ) for circ in circuit_list]
    
        process_list = []
        circuit_list = []
        for qasm_path in qasm_list:
            # The format is "/path/to/the/qasm/file/name.qasm"
            qasm_name = qasm_path.split("/")[-1].split(".")[0]
            file_name = "_".join([backend, qasm_name, str(cu_size)]) + ".pkl"
            compilation_obj = os.path.join(self.data_dir, file_name)
            circ = self.get_qiskit_circ("qasm", qasm_path=qasm_path)
            circuit_list.append(circ)
            if not os.path.exists(compilation_obj):
                proc = back_manager.compile(circ)
                self.save_compilation_outcome(
                    self.data_dir, proc, qasm_name, backend, int(cu_size)
                )
            else:
                proc = self.load_compilation_outcome(
                    self.data_dir, qasm_name, backend, int(cu_size)
                )
            process_list.append(proc)
    
        print("\n==== Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)
    
        # Naive
        st_time = time.time()
>       naive_exes = proc_manager._select_naive(process_list)

tst/qvm/integration/qvm_test.py:224: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <qvm.manager.process_manager.QvmProcessManagerV2 object at 0x7f609f11f3a0>
processes = [<qvm.model.executable.Process object at 0x7f609f14ed40>, <qvm.model.executable.Process object at 0x7f608595e800>, <qv... <qvm.model.executable.Process object at 0x7f603dd5ecb0>, <qvm.model.executable.Process object at 0x7f5ff054e380>, ...]
reverse = False

    def _select_naive(
        self, processes: List[Process], reverse=False
    ) -> List[BaseExecutable]:
        """Traverse each of the process and add non-conflict exes"""
        # Init a set to record IDs of allocated comp units
        selected = set()
    
        # Init the selected list of executables
        exes = []
        processes = sorted(processes, key=lambda proc: proc.num_qubits, reverse=reverse)
    
        for proc in processes:
            for exe in proc:
                if not selected & exe.comp_unit_ids:
                    exes.append(exe)
                    selected |= exe.comp_unit_ids
                    # Find an executable, move on to next proc
                    break
    
        if len(exes) != len(processes):
>           raise ProcessError("Cannot select executables from all processes.")
E           qvm.manager.exceptions.ProcessError: 'Cannot select executables from all processes.'

../qvm/manager/process_manager.py:249: ProcessError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
=========================== short test summary info ============================
FAILED tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small/iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small/cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small/quantumwalks_n2/quantumwalks_n2.qasm,/root/projects/QASMBench/small/ising_n10/ising_n10.qasm,/root/projects/QASMBench/small/bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small/qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small/qaoa_n3/qaoa_n3.qasm-FakeBrooklyn-4]
================== 1 failed, 6 deselected in 64.35s (0:01:04) ==================
