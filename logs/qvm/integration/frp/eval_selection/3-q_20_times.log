Randomly selected files:
/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm
naive selection time	3.62396240234375e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7f36353dd300>
qasm = '/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)

        qasm_list = qasm.split(',')
        circuit_list = [self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list]
        process_list = [back_manager.compile(circ) for circ in circuit_list]

        print("\n === Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)

        # Naive
        st_time = time.time()
        executables = proc_manager._select_naive(process_list)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, executables)

tst/qvm/integration/qvm_test.py:194:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tst/qvm/integration/qvm_test.py:159: in get_fidelity
    res = exe.comp_unit.backend.run(exe.circ, shots=shots).result().get_counts()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = Result(backend_name='aer_simulator', backend_version='0.11.0', qobj_id='e7af49d0-3e42-44bb-816a-03038033f53e', job_id=...taken_load_qobj': 0.972894254, 'num_processes_per_experiments': 1, 'omp_enabled': True}, time_taken=0.9897439479827881)
experiment = None

    def get_counts(self, experiment=None):
        """Get the histogram data of an experiment.

        Args:
            experiment (str or QuantumCircuit or Schedule or int or None): the index of the
                experiment, as specified by ``data([experiment])``.

        Returns:
            dict[str, int] or list[dict[str, int]]: a dictionary or a list of
            dictionaries. A dictionary has the counts for each qubit with
            the keys containing a string in binary format and separated
            according to the registers in circuit (e.g. ``0100 1110``).
            The string is little-endian (cr[0] on the right hand side).

        Raises:
            QiskitError: if there are no counts for the experiment.
        """
        if experiment is None:
            exp_keys = range(len(self.results))
        else:
            exp_keys = [experiment]

        dict_list = []
        for key in exp_keys:
            exp = self._get_experiment(key)
            try:
                header = exp.header.to_dict()
            except (AttributeError, QiskitError):  # header is not available
                header = None

            if "counts" in self.data(key).keys():
                if header:
                    counts_header = {
                        k: v
                        for k, v in header.items()
                        if k in {"time_taken", "creg_sizes", "memory_slots"}
                    }
                else:
                    counts_header = {}
                dict_list.append(Counts(self.data(key)["counts"], **counts_header))
            elif "statevector" in self.data(key).keys():
                vec = postprocess.format_statevector(self.data(key)["statevector"])
                dict_list.append(statevector.Statevector(vec).probabilities_dict(decimals=15))
            else:
>               raise QiskitError(f'No counts for experiment "{repr(key)}"')
E               qiskit.exceptions.QiskitError: 'No counts for experiment "0"'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/result.py:289: QiskitError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
=========== 1 failed, 6 deselected, 3 warnings in 709.19s (0:11:49) ============
Randomly selected files:
/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm
naive selection time	2.0742416381835938e-05
naive selection result	0.019331842805156835
brute_force selection time	0.0028905868530273438
brute_force selection result	0.019521245536441894
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//shor_n5/shor_n5.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm,/root/projects/QASMBench/small//qrng_n4/qrng_n4.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 10 warnings in 186.66s (0:03:06) ===========
Randomly selected files:
/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm
naive selection time	1.7404556274414062e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7f02869ae080>
qasm = '/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//linearsolver_n3/linearsolver_n3.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)

        qasm_list = qasm.split(',')
        circuit_list = [self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list]
        process_list = [back_manager.compile(circ) for circ in circuit_list]

        print("\n === Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)

        # Naive
        st_time = time.time()
        executables = proc_manager._select_naive(process_list)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, executables)

tst/qvm/integration/qvm_test.py:194:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tst/qvm/integration/qvm_test.py:165: in get_fidelity
    fid = fid_calculator.calc_fidelity(circ, results[i], shots=shots)
../qvm/util/circuit.py:247: in calc_fidelity
    pv_noise, _ = counts_to_vector(counts, num_qubits)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

counts = {'1110': 14690, '0011': 743784, '0111': 17113, '1011': 39207, '1001': 6772, '0101': 26856, '0100': 32594, '1100': 15506, '0110': 5888, '1000': 3808, '0010': 32327, '0000': 8244, '1111': 25377, '0001': 27083, '1101': 44541, '1010': 4786}
num_qubits = 2

    def counts_to_vector(counts: Counts, num_qubits: int) -> Tuple[np.ndarray, int]:
        """Transforms Counts to a probability vector"""
        vec = np.zeros(2**num_qubits, dtype=float)
        shots = 0
        for key, val in counts.items():
            shots += val
>           vec[int(key, 2)] = val
E           IndexError: index 14 is out of bounds for axis 0 with size 4

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/mitigation/utils.py:93: IndexError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
Randomly selected files:
/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//lpn_n5/lpn_n5.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//lpn_n5/lpn_n5.qasm
naive selection time	3.5762786865234375e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//lpn_n5/lpn_n5.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7f320c5b5f60>
qasm = '/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//lpn_n5/lpn_n5.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)

        qasm_list = qasm.split(',')
        circuit_list = [self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list]
        process_list = [back_manager.compile(circ) for circ in circuit_list]

        print("\n === Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)

        # Naive
        st_time = time.time()
        executables = proc_manager._select_naive(process_list)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, executables)

tst/qvm/integration/qvm_test.py:194:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tst/qvm/integration/qvm_test.py:165: in get_fidelity
    fid = fid_calculator.calc_fidelity(circ, results[i], shots=shots)
../qvm/util/circuit.py:247: in calc_fidelity
    pv_noise, _ = counts_to_vector(counts, num_qubits)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

counts = {'1010': 4606, '1111': 25520, '1011': 39468, '0011': 743482, '0111': 17103, '1101': 44687, '0001': 27016, '1100': 15685, '0110': 6009, '1000': 3720, '0010': 31777, '0000': 8232, '1110': 14870, '1001': 6616, '0101': 27009, '0100': 32776}
num_qubits = 2

    def counts_to_vector(counts: Counts, num_qubits: int) -> Tuple[np.ndarray, int]:
        """Transforms Counts to a probability vector"""
        vec = np.zeros(2**num_qubits, dtype=float)
        shots = 0
        for key, val in counts.items():
            shots += val
>           vec[int(key, 2)] = val
E           IndexError: index 10 is out of bounds for axis 0 with size 4

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/mitigation/utils.py:93: IndexError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
Randomly selected files:
/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//deutsch_n2/deutsch_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//deutsch_n2/deutsch_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm
naive selection time	2.2172927856445312e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//deutsch_n2/deutsch_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7f6e8e226020>
qasm = '/root/projects/QASMBench/small//bb84_n8/bb84_n8.qasm,/root/projects/QASMBench/small//deutsch_n2/deutsch_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)

        qasm_list = qasm.split(',')
        circuit_list = [self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list]
        process_list = [back_manager.compile(circ) for circ in circuit_list]

        print("\n === Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)

        # Naive
        st_time = time.time()
        executables = proc_manager._select_naive(process_list)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, executables)

tst/qvm/integration/qvm_test.py:194:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tst/qvm/integration/qvm_test.py:165: in get_fidelity
    fid = fid_calculator.calc_fidelity(circ, results[i], shots=shots)
../qvm/util/circuit.py:247: in calc_fidelity
    pv_noise, _ = counts_to_vector(counts, num_qubits)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

counts = {'1 1 0 1 1 1 0 0': 1, '0 0 1 1 1 0 1 0': 1, '0 0 1 0 1 0 1 1': 2, '1 1 1 1 1 1 0 1': 1, '0 1 0 0 1 1 1 1': 1, '0 1 1 ...05, '1 1 0 1 0 0 1 0': 7, '1 0 0 0 1 1 0 0': 5, '0 1 1 1 1 0 0 0': 209, '0 1 1 0 1 1 0 1': 187, '0 0 0 0 1 0 0 0': 235}
num_qubits = 8

    def counts_to_vector(counts: Counts, num_qubits: int) -> Tuple[np.ndarray, int]:
        """Transforms Counts to a probability vector"""
        vec = np.zeros(2**num_qubits, dtype=float)
        shots = 0
        for key, val in counts.items():
            shots += val
>           vec[int(key, 2)] = val
E           ValueError: invalid literal for int() with base 2: '1 1 0 1 1 1 0 0'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/mitigation/utils.py:93: ValueError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
Randomly selected files:
/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//deutsch_n2/deutsch_n2.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//deutsch_n2/deutsch_n2.qasm
naive selection time	1.3589859008789062e-05
naive selection result	1.1233142605301534
brute_force selection time	0.00281524658203125
brute_force selection result	1.1200859172646964
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//deutsch_n2/deutsch_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//deutsch_n2/deutsch_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//deutsch_n2/deutsch_n2.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 3 warnings in 100.07s (0:01:40) ============
Randomly selected files:
/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm,/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm,/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm
naive selection time	4.172325134277344e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm,/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7fe5c38e67a0>
qasm = '/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm,/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)

        qasm_list = qasm.split(',')
        circuit_list = [self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list]
        process_list = [back_manager.compile(circ) for circ in circuit_list]

        print("\n === Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)

        # Naive
        st_time = time.time()
        executables = proc_manager._select_naive(process_list)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, executables)

tst/qvm/integration/qvm_test.py:194:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tst/qvm/integration/qvm_test.py:159: in get_fidelity
    res = exe.comp_unit.backend.run(exe.circ, shots=shots).result().get_counts()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = Result(backend_name='aer_simulator', backend_version='0.11.0', qobj_id='155c4e30-547a-48c0-8dc6-c36ec0f60fad', job_id=...taken_load_qobj': 0.966429469, 'num_processes_per_experiments': 1, 'omp_enabled': True}, time_taken=0.9836287498474121)
experiment = None

    def get_counts(self, experiment=None):
        """Get the histogram data of an experiment.

        Args:
            experiment (str or QuantumCircuit or Schedule or int or None): the index of the
                experiment, as specified by ``data([experiment])``.

        Returns:
            dict[str, int] or list[dict[str, int]]: a dictionary or a list of
            dictionaries. A dictionary has the counts for each qubit with
            the keys containing a string in binary format and separated
            according to the registers in circuit (e.g. ``0100 1110``).
            The string is little-endian (cr[0] on the right hand side).

        Raises:
            QiskitError: if there are no counts for the experiment.
        """
        if experiment is None:
            exp_keys = range(len(self.results))
        else:
            exp_keys = [experiment]

        dict_list = []
        for key in exp_keys:
            exp = self._get_experiment(key)
            try:
                header = exp.header.to_dict()
            except (AttributeError, QiskitError):  # header is not available
                header = None

            if "counts" in self.data(key).keys():
                if header:
                    counts_header = {
                        k: v
                        for k, v in header.items()
                        if k in {"time_taken", "creg_sizes", "memory_slots"}
                    }
                else:
                    counts_header = {}
                dict_list.append(Counts(self.data(key)["counts"], **counts_header))
            elif "statevector" in self.data(key).keys():
                vec = postprocess.format_statevector(self.data(key)["statevector"])
                dict_list.append(statevector.Statevector(vec).probabilities_dict(decimals=15))
            else:
>               raise QiskitError(f'No counts for experiment "{repr(key)}"')
E               qiskit.exceptions.QiskitError: 'No counts for experiment "0"'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/result.py:289: QiskitError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
Randomly selected files:
/root/projects/QASMBench/small//lpn_n5/lpn_n5.qasm,/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//lpn_n5/lpn_n5.qasm,/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm
naive selection time	1.6927719116210938e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//lpn_n5/lpn_n5.qasm,/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7f6c48d4a380>
qasm = '/root/projects/QASMBench/small//lpn_n5/lpn_n5.qasm,/root/projects/QASMBench/small//hhl_n10/hhl_n10.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)

        qasm_list = qasm.split(',')
        circuit_list = [self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list]
        process_list = [back_manager.compile(circ) for circ in circuit_list]

        print("\n === Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)

        # Naive
        st_time = time.time()
        executables = proc_manager._select_naive(process_list)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, executables)

tst/qvm/integration/qvm_test.py:194:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tst/qvm/integration/qvm_test.py:159: in get_fidelity
    res = exe.comp_unit.backend.run(exe.circ, shots=shots).result().get_counts()
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

self = Result(backend_name='aer_simulator', backend_version='0.11.0', qobj_id='7b47047b-e990-4bc4-8f44-2a441279e1f9', job_id=..._taken_load_qobj': 0.885624523, 'num_processes_per_experiments': 1, 'omp_enabled': True}, time_taken=0.898277759552002)
experiment = None

    def get_counts(self, experiment=None):
        """Get the histogram data of an experiment.

        Args:
            experiment (str or QuantumCircuit or Schedule or int or None): the index of the
                experiment, as specified by ``data([experiment])``.

        Returns:
            dict[str, int] or list[dict[str, int]]: a dictionary or a list of
            dictionaries. A dictionary has the counts for each qubit with
            the keys containing a string in binary format and separated
            according to the registers in circuit (e.g. ``0100 1110``).
            The string is little-endian (cr[0] on the right hand side).

        Raises:
            QiskitError: if there are no counts for the experiment.
        """
        if experiment is None:
            exp_keys = range(len(self.results))
        else:
            exp_keys = [experiment]

        dict_list = []
        for key in exp_keys:
            exp = self._get_experiment(key)
            try:
                header = exp.header.to_dict()
            except (AttributeError, QiskitError):  # header is not available
                header = None

            if "counts" in self.data(key).keys():
                if header:
                    counts_header = {
                        k: v
                        for k, v in header.items()
                        if k in {"time_taken", "creg_sizes", "memory_slots"}
                    }
                else:
                    counts_header = {}
                dict_list.append(Counts(self.data(key)["counts"], **counts_header))
            elif "statevector" in self.data(key).keys():
                vec = postprocess.format_statevector(self.data(key)["statevector"])
                dict_list.append(statevector.Statevector(vec).probabilities_dict(decimals=15))
            else:
>               raise QiskitError(f'No counts for experiment "{repr(key)}"')
E               qiskit.exceptions.QiskitError: 'No counts for experiment "0"'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/result.py:289: QiskitError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
Randomly selected files:
/root/projects/QASMBench/small//adder_n10/adder_n10.qasm,/root/projects/QASMBench/small//basis_trotter_n4/basis_trotter_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//adder_n10/adder_n10.qasm,/root/projects/QASMBench/small//basis_trotter_n4/basis_trotter_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm
naive selection time	1.621246337890625e-05
naive selection result	0.976346217372467
brute_force selection time	0.0008730888366699219
brute_force selection result	0.9783059919849032
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//adder_n10/adder_n10.qasm,/root/projects/QASMBench/small//basis_trotter_n4/basis_trotter_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//adder_n10/adder_n10.qasm,/root/projects/QASMBench/small//basis_trotter_n4/basis_trotter_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//adder_n10/adder_n10.qasm,/root/projects/QASMBench/small//basis_trotter_n4/basis_trotter_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 3 warnings in 109.94s (0:01:49) ============
Randomly selected files:
/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//shor_n5/shor_n5.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//shor_n5/shor_n5.qasm
naive selection time	3.0279159545898438e-05
naive selection result	0.13916172961311843
brute_force selection time	0.0005209445953369141
brute_force selection result	0.14030071630728194
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//shor_n5/shor_n5.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//shor_n5/shor_n5.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//shor_n5/shor_n5.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 3 warnings in 193.47s (0:03:13) ============
Randomly selected files:
/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm
naive selection time	2.7418136596679688e-05
naive selection result	0.11114424179989675
brute_force selection time	0.0020058155059814453
brute_force selection result	0.11111120983986163
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 10 warnings in 98.73s (0:01:38) ============
Randomly selected files:
/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm
naive selection time	1.9311904907226562e-05
naive selection result	0.18706601658049346
brute_force selection time	0.0010826587677001953
brute_force selection result	0.1863850273543264
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//qpe_n9/qpe_n9.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 3 warnings in 101.04s (0:01:41) ============
Randomly selected files:
/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm
naive selection time	1.3589859008789062e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7f1c18c3f670>
qasm = '/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)

        qasm_list = qasm.split(',')
        circuit_list = [self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list]
        process_list = [back_manager.compile(circ) for circ in circuit_list]

        print("\n === Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)

        # Naive
        st_time = time.time()
        executables = proc_manager._select_naive(process_list)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, executables)

tst/qvm/integration/qvm_test.py:194:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tst/qvm/integration/qvm_test.py:165: in get_fidelity
    fid = fid_calculator.calc_fidelity(circ, results[i], shots=shots)
../qvm/util/circuit.py:247: in calc_fidelity
    pv_noise, _ = counts_to_vector(counts, num_qubits)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

counts = {'01 111': 2, '00 101': 965, '01 001': 13387, '11 010': 297, '10 001': 54, '01 101': 405, '11 000': 57, '10 101': 448,...: 66, '11 101': 90, '10 110': 24, '11 110': 44, '01 011': 108, '10 111': 664, '10 100': 21, '00 010': 16, '10 011': 20}
num_qubits = 5

    def counts_to_vector(counts: Counts, num_qubits: int) -> Tuple[np.ndarray, int]:
        """Transforms Counts to a probability vector"""
        vec = np.zeros(2**num_qubits, dtype=float)
        shots = 0
        for key, val in counts.items():
            shots += val
>           vec[int(key, 2)] = val
E           ValueError: invalid literal for int() with base 2: '01 111'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/mitigation/utils.py:93: ValueError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
WARNING  root:backend_manager.py:407 Current circuit:        ┌───┐ ░ ┌───────────┐      ┌───┐┌─┐
  q_0: ┤ X ├─░─┤0          ├──────┤ X ├┤M├────────────────
       └───┘ ░ │           │      └─╥─┘└╥┘     ┌───┐   ┌─┐
  q_1: ──────░─┤1          ├────────╫───╫──────┤ X ├───┤M├
             ░ │           │        ║   ║ ┌───┐└─╥─┘┌─┐└╥┘
  q_2: ──────░─┤2 syndrome ├────────╫───╫─┤ X ├──╫──┤M├─╫─
             ░ │           │┌─┐     ║   ║ └─╥─┘  ║  └╥┘ ║
  a_0: ────────┤3          ├┤M├─────╫───╫───╫────╫───╫──╫─
               │           │└╥┘┌─┐  ║   ║   ║    ║   ║  ║
  a_1: ────────┤4          ├─╫─┤M├──╫───╫───╫────╫───╫──╫─
               └───────────┘ ║ └╥┘  ║   ║   ║    ║   ║  ║
  c_0: ══════════════════════╬══╬═══╬═══╩═══╬════╬═══╬══╬═
                             ║  ║   ║       ║    ║   ║  ║
  c_1: ══════════════════════╬══╬═══╬═══════╬════╬═══╬══╩═
                             ║  ║   ║       ║    ║   ║
  c_2: ══════════════════════╬══╬═══╬═══════╬════╬═══╩════
                             ║  ║   ║       ║    ║
syn_0: ══════════════════════╩══╬═══■═══════o════■════════
                                ║   ║       ║    ║
syn_1: ═════════════════════════╩═══o═══════■════■════════
                                   0x1     0x2  0x3
cannot compile on compute unit <qvm.model.compute_unit.ComputeUnit object at 0x7f1b91a67d90>, error: 'Number of qubits (5) in circuit-91 is greater than maximum (4) in the coupling_map'
WARNING  root:backend_manager.py:407 Current circuit:        ┌───┐ ░ ┌───────────┐      ┌───┐┌─┐
  q_0: ┤ X ├─░─┤0          ├──────┤ X ├┤M├────────────────
       └───┘ ░ │           │      └─╥─┘└╥┘     ┌───┐   ┌─┐
  q_1: ──────░─┤1          ├────────╫───╫──────┤ X ├───┤M├
             ░ │           │        ║   ║ ┌───┐└─╥─┘┌─┐└╥┘
  q_2: ──────░─┤2 syndrome ├────────╫───╫─┤ X ├──╫──┤M├─╫─
             ░ │           │┌─┐     ║   ║ └─╥─┘  ║  └╥┘ ║
  a_0: ────────┤3          ├┤M├─────╫───╫───╫────╫───╫──╫─
               │           │└╥┘┌─┐  ║   ║   ║    ║   ║  ║
  a_1: ────────┤4          ├─╫─┤M├──╫───╫───╫────╫───╫──╫─
               └───────────┘ ║ └╥┘  ║   ║   ║    ║   ║  ║
  c_0: ══════════════════════╬══╬═══╬═══╩═══╬════╬═══╬══╬═
                             ║  ║   ║       ║    ║   ║  ║
  c_1: ══════════════════════╬══╬═══╬═══════╬════╬═══╬══╩═
                             ║  ║   ║       ║    ║   ║
  c_2: ══════════════════════╬══╬═══╬═══════╬════╬═══╩════
                             ║  ║   ║       ║    ║
syn_0: ══════════════════════╩══╬═══■═══════o════■════════
                                ║   ║       ║    ║
syn_1: ═════════════════════════╩═══o═══════■════■════════
                                   0x1     0x2  0x3
cannot compile on compute unit <qvm.model.compute_unit.ComputeUnit object at 0x7f1b8fa8dd50>, error: 'Number of qubits (5) in circuit-91 is greater than maximum (4) in the coupling_map'
WARNING  root:backend_manager.py:407 Current circuit:        ┌───┐ ░ ┌───────────┐      ┌───┐┌─┐
  q_0: ┤ X ├─░─┤0          ├──────┤ X ├┤M├────────────────
       └───┘ ░ │           │      └─╥─┘└╥┘     ┌───┐   ┌─┐
  q_1: ──────░─┤1          ├────────╫───╫──────┤ X ├───┤M├
             ░ │           │        ║   ║ ┌───┐└─╥─┘┌─┐└╥┘
  q_2: ──────░─┤2 syndrome ├────────╫───╫─┤ X ├──╫──┤M├─╫─
             ░ │           │┌─┐     ║   ║ └─╥─┘  ║  └╥┘ ║
  a_0: ────────┤3          ├┤M├─────╫───╫───╫────╫───╫──╫─
               │           │└╥┘┌─┐  ║   ║   ║    ║   ║  ║
  a_1: ────────┤4          ├─╫─┤M├──╫───╫───╫────╫───╫──╫─
               └───────────┘ ║ └╥┘  ║   ║   ║    ║   ║  ║
  c_0: ══════════════════════╬══╬═══╬═══╩═══╬════╬═══╬══╬═
                             ║  ║   ║       ║    ║   ║  ║
  c_1: ══════════════════════╬══╬═══╬═══════╬════╬═══╬══╩═
                             ║  ║   ║       ║    ║   ║
  c_2: ══════════════════════╬══╬═══╬═══════╬════╬═══╩════
                             ║  ║   ║       ║    ║
syn_0: ══════════════════════╩══╬═══■═══════o════■════════
                                ║   ║       ║    ║
syn_1: ═════════════════════════╩═══o═══════■════■════════
                                   0x1     0x2  0x3
cannot compile on compute unit <qvm.model.compute_unit.ComputeUnit object at 0x7f1b88fb7df0>, error: 'Number of qubits (5) in circuit-91 is greater than maximum (4) in the coupling_map'
=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//variational_n4/variational_n4.qasm,/root/projects/QASMBench/small//qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small//inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small/variational_n4/variational_n4.qasm,/root/projects/QASMBench/small/qec_sm_n5/qec_sm_n5.qasm,/root/projects/QASMBench/small/inverseqft_n4/inverseqft_n4.qasm-FakeBrooklyn-4]
=========== 1 failed, 6 deselected, 10 warnings in 87.35s (0:01:27) ============
Randomly selected files:
/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm
naive selection time	1.71661376953125e-05
naive selection result	0.16824940704513103
brute_force selection time	0.00507044792175293
brute_force selection result	0.1685822625991165
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//adder_n4/adder_n4.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 10 warnings in 101.25s (0:01:41) ===========
Randomly selected files:
/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm
naive selection time	3.337860107421875e-05
naive selection result	0.7556013309334594
brute_force selection time	0.0021152496337890625
brute_force selection result	0.7550857306066314
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//cat_state_n4/cat_state_n4.qasm,/root/projects/QASMBench/small//hhl_n7/hhl_n7.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 10 warnings in 106.27s (0:01:46) ===========
Randomly selected files:
/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm
naive selection time	1.7404556274414062e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7ff554c563b0>
qasm = '/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)

        qasm_list = qasm.split(',')
        circuit_list = [self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list]
        process_list = [back_manager.compile(circ) for circ in circuit_list]

        print("\n === Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)

        # Naive
        st_time = time.time()
        executables = proc_manager._select_naive(process_list)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, executables)

tst/qvm/integration/qvm_test.py:194:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tst/qvm/integration/qvm_test.py:165: in get_fidelity
    fid = fid_calculator.calc_fidelity(circ, results[i], shots=shots)
../qvm/util/circuit.py:247: in calc_fidelity
    pv_noise, _ = counts_to_vector(counts, num_qubits)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

counts = {'0 0 1': 112879, '1 0 0': 50071, '0 1 0': 111219, '0 0 0': 230301, '1 1 0': 142058, '1 1 1': 43747, '0 1 1': 219467, '1 0 1': 138834}
num_qubits = 3

    def counts_to_vector(counts: Counts, num_qubits: int) -> Tuple[np.ndarray, int]:
        """Transforms Counts to a probability vector"""
        vec = np.zeros(2**num_qubits, dtype=float)
        shots = 0
        for key, val in counts.items():
            shots += val
>           vec[int(key, 2)] = val
E           ValueError: invalid literal for int() with base 2: '0 0 1'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/mitigation/utils.py:93: ValueError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small/grover_n2/grover_n2.qasm,/root/projects/QASMBench/small/qaoa_n3/qaoa_n3.qasm,/root/projects/QASMBench/small/dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
=========== 1 failed, 6 deselected, 10 warnings in 86.83s (0:01:26) ============
Randomly selected files:
/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm
naive selection time	3.0994415283203125e-05
naive selection result	0.1440536318020402
brute_force selection time	0.0029404163360595703
brute_force selection result	0.12430867355419123
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//hs4_n4/hs4_n4.qasm,/root/projects/QASMBench/small//basis_change_n3/basis_change_n3.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 13 warnings in 98.63s (0:01:38) ============
Randomly selected files:
/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm
naive selection time	1.8358230590820312e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4] _

self = <qvm_test.TestSelectMethods object at 0x7f53806ab520>
qasm = '/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm'
backend = 'FakeBrooklyn', cu_size = '4'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)

        qasm_list = qasm.split(',')
        circuit_list = [self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list]
        process_list = [back_manager.compile(circ) for circ in circuit_list]

        print("\n === Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)

        # Naive
        st_time = time.time()
        executables = proc_manager._select_naive(process_list)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, executables)

tst/qvm/integration/qvm_test.py:194:
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _
tst/qvm/integration/qvm_test.py:165: in get_fidelity
    fid = fid_calculator.calc_fidelity(circ, results[i], shots=shots)
../qvm/util/circuit.py:247: in calc_fidelity
    pv_noise, _ = counts_to_vector(counts, num_qubits)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

counts = {'1010': 3808, '1011': 27512, '0011': 791106, '0111': 9245, '1100': 16939, '1110': 16364, '1001': 4545, '0101': 19742, '1000': 3122, '0110': 4753, '1101': 51912, '0010': 26190, '0000': 6861, '0100': 26603, '1111': 20338, '0001': 19536}
num_qubits = 2

    def counts_to_vector(counts: Counts, num_qubits: int) -> Tuple[np.ndarray, int]:
        """Transforms Counts to a probability vector"""
        vec = np.zeros(2**num_qubits, dtype=float)
        shots = 0
        for key, val in counts.items():
            shots += val
>           vec[int(key, 2)] = val
E           IndexError: index 10 is out of bounds for axis 0 with size 4

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/mitigation/utils.py:93: IndexError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 26, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 23, 25, 26, 34, 35, 36, 37, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 26'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 40, current visited status: {0, 1, 3, 4, 5, 6, 8, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 34, 35, 36, 37, 40, 42, 43, 44, 45, 49, 50, 51, 54}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 40'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 3, 4, 5, 6, 8, 9, 10, 12, 13, 18, 19, 20, 21, 22, 25, 26, 27, 28, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 55, 56, 57}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 7, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 7'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 17, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 17'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 64, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 64'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 11, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 11'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 33, current visited status: {0, 1, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 33'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 2, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 2'
=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//grover_n2/grover_n2.qasm,/root/projects/QASMBench/small//ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small/grover_n2/grover_n2.qasm,/root/projects/QASMBench/small/ipea_n2/ipea_n2.qasm,/root/projects/QASMBench/small/dnn_n2/dnn_n2.qasm-FakeBrooklyn-4]
=========== 1 failed, 6 deselected, 10 warnings in 115.40s (0:01:55) ===========
Randomly selected files:
/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm
naive selection time	1.7881393432617188e-05
naive selection result	0.1912834510604954
brute_force selection time	0.0009000301361083984
brute_force selection result	0.19085811666153937
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//dnn_n2/dnn_n2.qasm,/root/projects/QASMBench/small//ising_n10/ising_n10.qasm,/root/projects/QASMBench/small//fredkin_n3/fredkin_n3.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 3 warnings in 106.66s (0:01:46) ============
Randomly selected files:
/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py
 === Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm
naive selection time	1.8596649169921875e-05
naive selection result	0.07219515415904237
brute_force selection time	0.003237485885620117
brute_force selection result	0.07248214527422005
.

=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//iswap_n2/iswap_n2.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm,/root/projects/QASMBench/small//teleportation_n3/teleportation_n3.qasm-FakeBrooklyn-4]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========== 1 passed, 6 deselected, 10 warnings in 95.23s (0:01:35) ============
