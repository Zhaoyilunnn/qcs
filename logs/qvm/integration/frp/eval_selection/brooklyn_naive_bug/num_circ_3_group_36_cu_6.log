Randomly selected files:
/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qvm
plugins: anyio-3.6.2
collected 7 items / 6 deselected / 1 selected

tst/qvm/integration/qvm_test.py 
==== Testing ===

==== qasm_list ===

/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm
compute_unit_list	[{3}, {0}, {5}]
naive selection time	5.078315734863281e-05
F

=================================== FAILURES ===================================
_ TestSelectMethods.test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6] _

self = <qvm_test.TestSelectMethods object at 0x7f209ff2c4f0>
qasm = '/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm'
backend = 'FakeBrooklyn', cu_size = '6'

    def test_select_methods(self, qasm, backend, cu_size):
        """
        Args:
            bench: List of qasm file paths
            backend: Backend name
        """
        self._backend = globals().get(backend)()
        back_manager = FrpBackendManagerV2(self._backend)
        back_manager.cu_size = int(cu_size)
        back_manager.init_helpers()
        back_manager.init_cus()
        proc_manager = QvmProcessManagerV2(self._backend)
    
        qasm_list = qasm.split(",")
        # circuit_list = [
        #     self.get_qiskit_circ("qasm", qasm_path=qasm_path) for qasm_path in qasm_list
        # ]
        # process_list = [back_manager.compile(circ) for circ in circuit_list]
    
        process_list = []
        circuit_list = []
        for qasm_path in qasm_list:
            # The format is "/path/to/the/qasm/file/name.qasm"
            qasm_name = qasm_path.split("/")[-1].split(".")[0]
            file_name = "_".join([backend, qasm_name, str(cu_size)]) + ".pkl"
            compilation_obj = os.path.join(self.data_dir, file_name)
            circ = self.get_qiskit_circ("qasm", qasm_path=qasm_path)
            circuit_list.append(circ)
            if not os.path.exists(compilation_obj):
                proc = back_manager.compile(circ)
                self.save_compilation_outcome(
                    self.data_dir, proc, qasm_name, backend, int(cu_size)
                )
            else:
                proc = self.load_compilation_outcome(
                    self.data_dir, qasm_name, backend, int(cu_size)
                )
            process_list.append(proc)
    
        print("\n==== Testing ===")
        print("\n==== qasm_list ===\n")
        print(qasm)
    
        # Naive
        st_time = time.time()
        naive_exes = proc_manager._select_naive(process_list)
        self.debug_exes(naive_exes)
        print(f"naive selection time\t{time.time() - st_time}")
>       fid = self.get_fidelity(circuit_list, naive_exes)

tst/qvm/integration/qvm_test.py:218: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tst/qvm/integration/qvm_test.py:166: in get_fidelity
    fid = fid_calculator.calc_fidelity(circ, results[i], shots=shots)
../qvm/util/circuit.py:247: in calc_fidelity
    pv_noise, _ = counts_to_vector(counts, num_qubits)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

counts = {'1 0 1 0': 30908, '0 1 0 0': 28763, '0 0 1 0': 104623, '0 0 0 0': 110790, '1 1 0 0': 30193, '0 0 0 1': 27762, '1 1 1 ...0': 98683, '1 0 1 1': 98070, '0 0 1 1': 29214, '0 1 1 1': 98595, '1 0 0 0': 104904, '0 1 1 0': 29696, '1 1 0 1': 98155}
num_qubits = 4

    def counts_to_vector(counts: Counts, num_qubits: int) -> Tuple[np.ndarray, int]:
        """Transforms Counts to a probability vector"""
        vec = np.zeros(2**num_qubits, dtype=float)
        shots = 0
        for key, val in counts.items():
            shots += val
>           vec[int(key, 2)] = val
E           ValueError: invalid literal for int() with base 2: '1 0 1 0'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/result/mitigation/utils.py:93: ValueError
------------------------------ Captured log call -------------------------------
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 9, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 9'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 12, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 49, 50, 51, 52, 54, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 12'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 22, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 22'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 8, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 59, 60, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 8'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 58, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 58'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 62, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 62'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 16, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 62, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 16'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 61, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 61'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 23, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 23'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 30, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 30'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 15, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 58, 59, 60, 61, 62, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 15'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 57, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 57'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 63, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 63'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 56, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 56'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 31, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 31'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 55, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 55'
WARNING  root:graph.py:571 Failed to grow a subgraph from root: 32, current visited status: {0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64}, error message is 'Cannot grow a graph that satisfy the subgraph size from current root: 32'
=============================== warnings summary ===============================
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (96966.20180926041 > 2 * 40591.82230473617). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qcs/tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small//qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small//bell_n4/bell_n4.qasm,/root/projects/QASMBench/small//simon_n6/simon_n6.qasm-FakeBrooklyn-6]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (9.696620180926042e-05 > 2 * 4.059182230473617e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED tst/qvm/integration/qvm_test.py::TestSelectMethods::test_select_methods[/root/projects/QASMBench/small/qaoa_n6/qaoa_n6.qasm,/root/projects/QASMBench/small/bell_n4/bell_n4.qasm,/root/projects/QASMBench/small/simon_n6/simon_n6.qasm-FakeBrooklyn-6]
================ 1 failed, 6 deselected, 12 warnings in 37.17s =================
