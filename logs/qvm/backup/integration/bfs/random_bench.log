============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1101': 122, '1100': 115, '0001': 588, '1111': 88, '0000': 561, '0010': 153, '1010': 301, '0100': 264, '1001': 420, '0101': 270, '1110': 84, '1000': 448, '0110': 101, '1011': 287, '0111': 115, '0011': 179}
Statevector([0.13696289+0.j, 0.14355469+0.j, 0.03735352+0.j,
             0.04370117+0.j, 0.06445312+0.j, 0.06591797+0.j,
             0.0246582 +0.j, 0.02807617+0.j, 0.109375  +0.j,
             0.10253906+0.j, 0.07348633+0.j, 0.07006836+0.j,
             0.02807617+0.j, 0.02978516+0.j, 0.02050781+0.j,
             0.02148438+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.19042969+0.j, 0.18261719+0.j, 0.01367188+0.j,
             0.01367188+0.j, 0.06445312+0.j, 0.06054688+0.j,
             0.00878906+0.j, 0.00683594+0.j, 0.13769531+0.j,
             0.12890625+0.j, 0.08398438+0.j, 0.06445312+0.j,
             0.01464844+0.j, 0.01367188+0.j, 0.00683594+0.j,
             0.00878906+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.010418936646829025
================= Counts after running on backend =====================
{'0010': 163, '1101': 120, '1100': 104, '0001': 650, '1111': 63, '0100': 268, '0000': 586, '1010': 329, '1001': 436, '0101': 228, '1110': 65, '1000': 478, '0110': 87, '1011': 294, '0011': 124, '0111': 101}
Statevector([0.14306641+0.j, 0.15869141+0.j, 0.03979492+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.18945312+0.j, 0.19628906+0.j, 0.01074219+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.011848374902058367
Fidelity Comparison	0.010418936646829025	0.011848374902058367
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.13s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1100': 109, '1110': 658, '1010': 860, '0000': 354, '0010': 100, '0100': 465, '0001': 342, '1111': 81, '0101': 422, '1001': 113, '1011': 84, '0011': 83, '0111': 87, '1101': 136, '1000': 110, '0110': 92}
Statevector([0.08642578+0.j, 0.08349609+0.j, 0.02441406+0.j,
             0.02026367+0.j, 0.11352539+0.j, 0.10302734+0.j,
             0.02246094+0.j, 0.02124023+0.j, 0.02685547+0.j,
             0.02758789+0.j, 0.20996094+0.j, 0.02050781+0.j,
             0.02661133+0.j, 0.03320312+0.j, 0.16064453+0.j,
             0.01977539+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.11816406+0.j, 0.1015625 +0.j, 0.        +0.j,
             0.        +0.j, 0.13378906+0.j, 0.1484375 +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.26367188+0.j, 0.        +0.j,
             0.        +0.j, 0.00097656+0.j, 0.23144531+0.j,
             0.00195312+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.020103365331181067
================= Counts after running on backend =====================
{'1100': 88, '1011': 86, '1110': 694, '0000': 363, '0010': 77, '1101': 111, '1010': 905, '0001': 384, '1111': 57, '0100': 502, '0111': 40, '0011': 53, '0110': 78, '1000': 101, '0101': 477, '1001': 80}
Statevector([0.08862305+0.j, 0.09375   +0.j, 0.01879883+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.11523438+0.j, 0.11816406+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.022981295951524316
Fidelity Comparison	0.020103365331181067	0.022981295951524316
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.20s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0001': 170, '0100': 145, '1100': 700, '0000': 147, '0010': 412, '1101': 654, '1000': 245, '0110': 128, '1110': 111, '1001': 228, '0101': 154, '1010': 174, '1111': 127, '1011': 170, '0011': 405, '0111': 126}
Statevector([0.03588867+0.j, 0.04150391+0.j, 0.10058594+0.j,
             0.09887695+0.j, 0.03540039+0.j, 0.03759766+0.j,
             0.03125   +0.j, 0.03076172+0.j, 0.05981445+0.j,
             0.05566406+0.j, 0.04248047+0.j, 0.04150391+0.j,
             0.17089844+0.j, 0.15966797+0.j, 0.02709961+0.j,
             0.03100586+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.1328125 +0.j,
             0.12011719+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.01464844+0.j,
             0.0078125 +0.j, 0.00585938+0.j, 0.00195312+0.j,
             0.34960938+0.j, 0.3671875 +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.021098348199529937
================= Counts after running on backend =====================
{'1110': 72, '0001': 53, '1011': 121, '1100': 1013, '1101': 1020, '1000': 175, '0110': 83, '0011': 453, '0111': 72, '0010': 447, '0000': 61, '0100': 71, '1010': 145, '1111': 76, '1001': 171, '0101': 63}
Statevector([0.01489258+0.j, 0.01293945+0.j, 0.10913086+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.11425781+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.04381868394034427
Fidelity Comparison	0.021098348199529937	0.04381868394034427
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.40s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 46, '0100': 31, '0000': 167, '0111': 366, '0011': 92, '1011': 334, '1111': 646, '0001': 372, '1101': 343, '1100': 101, '0110': 66, '1000': 297, '0010': 347, '1001': 615, '0101': 99, '1010': 174}
Statevector([0.04077148+0.j, 0.09082031+0.j, 0.0847168 +0.j,
             0.02246094+0.j, 0.00756836+0.j, 0.02416992+0.j,
             0.01611328+0.j, 0.08935547+0.j, 0.07250977+0.j,
             0.15014648+0.j, 0.04248047+0.j, 0.08154297+0.j,
             0.0246582 +0.j, 0.08374023+0.j, 0.01123047+0.j,
             0.15771484+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.01953125+0.j, 0.08496094+0.j, 0.06933594+0.j,
             0.00390625+0.j, 0.00097656+0.j, 0.00390625+0.j,
             0.00097656+0.j, 0.09570312+0.j, 0.10058594+0.j,
             0.22167969+0.j, 0.02050781+0.j, 0.06933594+0.j,
             0.00195312+0.j, 0.08203125+0.j, 0.00097656+0.j,
             0.22363281+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.012643850503991416
================= Counts after running on backend =====================
{'1100': 79, '0101': 89, '1001': 636, '0010': 342, '0000': 160, '0100': 39, '0001': 338, '1111': 656, '0111': 346, '0011': 86, '1011': 336, '1101': 342, '1000': 346, '0110': 74, '1010': 170, '1110': 57}
Statevector([0.0390625 +0.j, 0.08251953+0.j, 0.08349609+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.02246094+0.j, 0.08300781+0.j, 0.06738281+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.012421199178845654
Fidelity Comparison	0.012643850503991416	0.012421199178845654
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.25s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1101': 41, '1100': 16, '0100': 19, '1011': 1468, '0111': 80, '0011': 774, '1010': 619, '0010': 235, '0000': 81, '0110': 43, '1000': 110, '1111': 160, '0001': 154, '1001': 151, '0101': 51, '1110': 94}
Statevector([0.01977539+0.j, 0.03759766+0.j, 0.05737305+0.j,
             0.18896484+0.j, 0.00463867+0.j, 0.01245117+0.j,
             0.01049805+0.j, 0.01953125+0.j, 0.02685547+0.j,
             0.03686523+0.j, 0.15112305+0.j, 0.35839844+0.j,
             0.00390625+0.j, 0.01000977+0.j, 0.02294922+0.j,
             0.0390625 +0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.2109375 +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.01367188+0.j, 0.        +0.j,
             0.        +0.j, 0.1875    +0.j, 0.54296875+0.j,
             0.        +0.j, 0.        +0.j, 0.00976562+0.j,
             0.03515625+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.07004434812643012
================= Counts after running on backend =====================
{'1101': 30, '1100': 11, '1110': 63, '1011': 1469, '0011': 801, '0111': 53, '1010': 636, '1111': 123, '0001': 141, '0010': 307, '0000': 83, '0101': 40, '1001': 173, '1000': 101, '0110': 39, '0100': 26}
Statevector([0.02026367+0.j, 0.03442383+0.j, 0.07495117+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.07039751898361146
Fidelity Comparison	0.07004434812643012	0.07039751898361146
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.21s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0010': 190, '1110': 78, '1010': 60, '1011': 78, '0111': 396, '0011': 214, '0001': 603, '1111': 66, '0100': 418, '1100': 82, '1000': 88, '0110': 289, '1101': 117, '0000': 245, '1001': 185, '0101': 987}
Statevector([0.05981445+0.j, 0.1472168 +0.j, 0.04638672+0.j,
             0.05224609+0.j, 0.10205078+0.j, 0.2409668 +0.j,
             0.07055664+0.j, 0.09667969+0.j, 0.02148438+0.j,
             0.04516602+0.j, 0.01464844+0.j, 0.01904297+0.j,
             0.02001953+0.j, 0.02856445+0.j, 0.01904297+0.j,
             0.01611328+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.04882812+0.j, 0.18066406+0.j, 0.03417969+0.j,
             0.02539062+0.j, 0.09179688+0.j, 0.40429688+0.j,
             0.0703125 +0.j, 0.08984375+0.j, 0.00585938+0.j,
             0.02050781+0.j, 0.00195312+0.j, 0.00683594+0.j,
             0.00292969+0.j, 0.01269531+0.j, 0.00097656+0.j,
             0.00292969+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.02389022146650177
================= Counts after running on backend =====================
{'1110': 55, '1010': 65, '1011': 62, '0111': 373, '0011': 171, '1101': 126, '0001': 651, '1111': 48, '0100': 382, '0010': 180, '0000': 226, '0101': 1218, '1001': 153, '1100': 72, '0110': 250, '1000': 64}
Statevector([0.05517578+0.j, 0.15893555+0.j, 0.04394531+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.04882812+0.j, 0.18164062+0.j, 0.03515625+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.02647173525707558
Fidelity Comparison	0.02389022146650177	0.02647173525707558
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.15s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1010': 76, '1100': 57, '1111': 72, '1110': 78, '0101': 364, '1001': 260, '1000': 73, '0110': 304, '1101': 108, '0001': 1365, '0010': 280, '0000': 240, '1011': 86, '0011': 298, '0111': 292, '0100': 143}
Statevector([0.05859375+0.j, 0.33325195+0.j, 0.06835938+0.j,
             0.07275391+0.j, 0.03491211+0.j, 0.08886719+0.j,
             0.07421875+0.j, 0.07128906+0.j, 0.01782227+0.j,
             0.06347656+0.j, 0.01855469+0.j, 0.02099609+0.j,
             0.01391602+0.j, 0.02636719+0.j, 0.01904297+0.j,
             0.01757812+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00488281+0.j, 0.56445312+0.j, 0.07324219+0.j,
             0.06445312+0.j, 0.        +0.j, 0.015625  +0.j,
             0.05664062+0.j, 0.06152344+0.j, 0.00097656+0.j,
             0.09863281+0.j, 0.01367188+0.j, 0.01757812+0.j,
             0.        +0.j, 0.00390625+0.j, 0.01464844+0.j,
             0.00976562+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.04644893225810165
================= Counts after running on backend =====================
{'1100': 44, '0000': 182, '0001': 1645, '1111': 89, '0011': 278, '0111': 248, '1011': 69, '1110': 59, '0100': 95, '1101': 86, '1000': 65, '0110': 304, '0010': 295, '0101': 204, '1001': 352, '1010': 81}
Statevector([0.04443359+0.j, 0.40161133+0.j, 0.07202148+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00585938+0.j, 0.52539062+0.j, 0.07128906+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.058605252982090406
Fidelity Comparison	0.04644893225810165	0.058605252982090406
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.30s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f2a1df27940>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f2a1dc8a590>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.52s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1101': 103, '0010': 123, '0000': 767, '1110': 105, '0001': 121, '1111': 637, '0101': 82, '1001': 123, '1100': 144, '0100': 159, '1011': 117, '0111': 114, '0011': 105, '1010': 76, '1000': 700, '0110': 620}
Statevector([0.18725586+0.j, 0.02954102+0.j, 0.0300293 +0.j,
             0.02563477+0.j, 0.03881836+0.j, 0.02001953+0.j,
             0.15136719+0.j, 0.02783203+0.j, 0.17089844+0.j,
             0.0300293 +0.j, 0.01855469+0.j, 0.02856445+0.j,
             0.03515625+0.j, 0.02514648+0.j, 0.02563477+0.j,
             0.15551758+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.25488281+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.00195312+0.j, 0.        +0.j,
             0.24023438+0.j, 0.        +0.j, 0.23925781+0.j,
             0.        +0.j, 0.        +0.j, 0.00195312+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.26171875+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.02749433608784102
================= Counts after running on backend =====================
{'0010': 111, '1010': 82, '1101': 110, '0000': 739, '0100': 175, '0110': 649, '1000': 697, '0101': 81, '1001': 112, '1100': 159, '1111': 673, '0001': 140, '1011': 94, '0111': 107, '0011': 69, '1110': 98}
Statevector([0.18041992+0.j, 0.03417969+0.j, 0.02709961+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.2578125+0.j, 0.       +0.j, 0.       +0.j, ...,
             0.       +0.j, 0.       +0.j, 0.       +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.02837905661726836
Fidelity Comparison	0.02749433608784102	0.02837905661726836
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.27s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7fd347fb42e0>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd347eaf0a0>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7fd3468ace50>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.50s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1100': 216, '1111': 117, '0100': 156, '0000': 183, '0010': 257, '0011': 457, '0111': 196, '1011': 162, '0001': 168, '1110': 498, '1001': 429, '0101': 130, '1101': 169, '1000': 413, '0110': 265, '1010': 280}
Statevector([0.04467773+0.j, 0.04101562+0.j, 0.06274414+0.j,
             0.11157227+0.j, 0.03808594+0.j, 0.03173828+0.j,
             0.06469727+0.j, 0.04785156+0.j, 0.10083008+0.j,
             0.10473633+0.j, 0.06835938+0.j, 0.03955078+0.j,
             0.05273438+0.j, 0.04125977+0.j, 0.12158203+0.j,
             0.02856445+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00488281+0.j, 0.        +0.j, 0.00195312+0.j,
             0.17285156+0.j, 0.00195312+0.j, 0.        +0.j,
             0.00488281+0.j, 0.01855469+0.j, 0.17675781+0.j,
             0.23046875+0.j, 0.05371094+0.j, 0.00097656+0.j,
             0.05078125+0.j, 0.03320312+0.j, 0.24121094+0.j,
             0.0078125 +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.010034724764636849
================= Counts after running on backend =====================
{'0100': 76, '0000': 132, '0101': 71, '1001': 632, '1100': 203, '1101': 157, '1000': 568, '0110': 169, '1110': 641, '0001': 94, '1111': 142, '0011': 515, '0111': 125, '1011': 133, '0010': 147, '1010': 291}
Statevector([0.03222656+0.j, 0.02294922+0.j, 0.03588867+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00390625+0.j, 0.        +0.j, 0.00097656+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.01640916150842031
Fidelity Comparison	0.010034724764636849	0.01640916150842031
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.25s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 140, '0011': 150, '0111': 180, '1011': 121, '0101': 209, '1001': 146, '1100': 237, '0100': 825, '1010': 235, '0010': 141, '0000': 347, '0001': 131, '1101': 171, '1000': 708, '0110': 188, '1110': 167}
Statevector([0.0847168 +0.j, 0.03198242+0.j, 0.03442383+0.j,
             0.03662109+0.j, 0.20141602+0.j, 0.05102539+0.j,
             0.04589844+0.j, 0.04394531+0.j, 0.17285156+0.j,
             0.03564453+0.j, 0.05737305+0.j, 0.02954102+0.j,
             0.05786133+0.j, 0.04174805+0.j, 0.04077148+0.j,
             0.03417969+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.05957031+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.44726562+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.43847656+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.0546875 +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.030306881215039994
================= Counts after running on backend =====================
{'0110': 135, '1000': 1198, '1100': 296, '0100': 1212, '0011': 67, '0111': 134, '1011': 60, '1111': 82, '0001': 71, '0010': 63, '0000': 304, '1001': 84, '0101': 86, '1110': 75, '1010': 153, '1101': 76}
Statevector([0.07421875+0.j, 0.01733398+0.j, 0.01538086+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.04589844+0.j, 0.        +0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.07361446978416097
Fidelity Comparison	0.030306881215039994	0.07361446978416097
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.47s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0000': 122, '1011': 155, '0111': 42, '0011': 40, '1100': 648, '0110': 54, '1000': 139, '0100': 570, '1001': 116, '0101': 444, '1110': 576, '0001': 101, '1111': 389, '1101': 504, '1010': 164, '0010': 32}
Statevector([0.02978516+0.j, 0.0246582 +0.j, 0.0078125 +0.j,
             0.00976562+0.j, 0.13916016+0.j, 0.10839844+0.j,
             0.01318359+0.j, 0.01025391+0.j, 0.03393555+0.j,
             0.02832031+0.j, 0.04003906+0.j, 0.0378418 +0.j,
             0.15820312+0.j, 0.12304688+0.j, 0.140625  +0.j,
             0.0949707 +0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00292969+0.j, 0.00097656+0.j, 0.        +0.j,
             0.        +0.j, 0.20605469+0.j, 0.12402344+0.j,
             0.        +0.j, 0.00097656+0.j, 0.        +0.j,
             0.00195312+0.j, 0.        +0.j, 0.00097656+0.j,
             0.24414062+0.j, 0.18261719+0.j, 0.14453125+0.j,
             0.09082031+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.017523519859935277
================= Counts after running on backend =====================
{'0010': 14, '1011': 61, '1101': 577, '1100': 819, '0110': 57, '1000': 72, '1001': 38, '0101': 490, '1110': 573, '0100': 721, '0001': 55, '1111': 413, '0011': 26, '0111': 50, '0000': 63, '1010': 67}
Statevector([0.01538086+0.j, 0.01342773+0.j, 0.00341797+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.024183566613430685
Fidelity Comparison	0.017523519859935277	0.024183566613430685
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.31s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1101': 63, '1110': 86, '0010': 57, '1111': 814, '0001': 409, '1011': 258, '0011': 1187, '0111': 304, '0110': 108, '1000': 121, '1100': 178, '0100': 87, '1010': 92, '0000': 71, '1001': 94, '0101': 167}
Statevector([0.01733398+0.j, 0.09985352+0.j, 0.01391602+0.j,
             0.28979492+0.j, 0.02124023+0.j, 0.04077148+0.j,
             0.02636719+0.j, 0.07421875+0.j, 0.02954102+0.j,
             0.02294922+0.j, 0.02246094+0.j, 0.06298828+0.j,
             0.04345703+0.j, 0.01538086+0.j, 0.02099609+0.j,
             0.19873047+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.11328125+0.j, 0.00292969+0.j,
             0.43847656+0.j, 0.        +0.j, 0.01464844+0.j,
             0.01464844+0.j, 0.07128906+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.04394531+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.30078125+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.04294737397509607
================= Counts after running on backend =====================
{'1101': 51, '0000': 36, '0001': 342, '1111': 955, '1010': 90, '1011': 216, '0011': 1362, '0111': 376, '1100': 119, '1110': 87, '1001': 67, '0101': 101, '0010': 54, '1000': 106, '0110': 92, '0100': 42}
Statevector([0.00878906+0.j, 0.08349609+0.j, 0.01318359+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.09082031+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.05664827264831729
Fidelity Comparison	0.04294737397509607	0.05664827264831729
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.11s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 240, '1010': 186, '1100': 397, '1111': 141, '0001': 272, '1001': 201, '0101': 504, '1000': 260, '0110': 150, '1101': 395, '0010': 149, '0000': 206, '0100': 362, '1011': 114, '0111': 291, '0011': 228}
Statevector([0.05029297+0.j, 0.06640625+0.j, 0.03637695+0.j,
             0.05566406+0.j, 0.08837891+0.j, 0.12304688+0.j,
             0.03662109+0.j, 0.07104492+0.j, 0.06347656+0.j,
             0.04907227+0.j, 0.04541016+0.j, 0.02783203+0.j,
             0.09692383+0.j, 0.09643555+0.j, 0.05859375+0.j,
             0.03442383+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.02539062+0.j, 0.06347656+0.j, 0.02636719+0.j,
             0.06542969+0.j, 0.08886719+0.j, 0.16796875+0.j,
             0.01269531+0.j, 0.07910156+0.j, 0.06933594+0.j,
             0.02832031+0.j, 0.04296875+0.j, 0.00390625+0.j,
             0.1015625 +0.j, 0.14160156+0.j, 0.07128906+0.j,
             0.01171875+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.006501322565100054
================= Counts after running on backend =====================
{'1011': 78, '0000': 146, '0010': 127, '0111': 290, '0011': 264, '1111': 143, '0001': 265, '1101': 436, '1100': 429, '0110': 124, '1000': 265, '1001': 190, '0101': 550, '1110': 274, '1010': 158, '0100': 357}
Statevector([0.03564453+0.j, 0.06469727+0.j, 0.03100586+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.01953125+0.j, 0.07226562+0.j, 0.02734375+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.007237576612396879
Fidelity Comparison	0.006501322565100054	0.007237576612396879
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.35s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1100': 84, '1111': 67, '0001': 295, '0100': 72, '0010': 949, '0000': 332, '1010': 283, '0101': 61, '1001': 255, '1101': 68, '1000': 267, '0110': 236, '1011': 280, '0111': 195, '0011': 277, '1110': 375}
Statevector([0.08105469+0.j, 0.07202148+0.j, 0.23168945+0.j,
             0.06762695+0.j, 0.01757812+0.j, 0.01489258+0.j,
             0.05761719+0.j, 0.04760742+0.j, 0.06518555+0.j,
             0.06225586+0.j, 0.0690918 +0.j, 0.06835938+0.j,
             0.02050781+0.j, 0.01660156+0.j, 0.09155273+0.j,
             0.01635742+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.06738281+0.j, 0.05566406+0.j, 0.32617188+0.j,
             0.06640625+0.j, 0.        +0.j, 0.        +0.j,
             0.06445312+0.j, 0.0546875 +0.j, 0.05566406+0.j,
             0.06152344+0.j, 0.05957031+0.j, 0.06738281+0.j,
             0.        +0.j, 0.        +0.j, 0.11914062+0.j,
             0.00195312+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.015121529258067312
================= Counts after running on backend =====================
{'1100': 59, '1110': 370, '1111': 56, '0001': 355, '0000': 338, '0010': 955, '1010': 298, '1101': 55, '1011': 255, '0111': 198, '0011': 236, '0100': 70, '0101': 67, '1001': 275, '0110': 254, '1000': 255}
Statevector([0.08251953+0.j, 0.08666992+0.j, 0.2331543 +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.0703125 +0.j, 0.06933594+0.j, 0.328125  +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.01550560244601229
Fidelity Comparison	0.015121529258067312	0.01550560244601229
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.33s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 43, '1010': 184, '0000': 175, '0010': 414, '0110': 33, '1000': 1031, '1100': 85, '0001': 149, '1111': 80, '0111': 28, '0011': 415, '1011': 194, '1001': 1111, '0101': 55, '1101': 55, '0100': 44}
Statevector([0.04272461+0.j, 0.03637695+0.j, 0.10107422+0.j,
             0.10131836+0.j, 0.01074219+0.j, 0.01342773+0.j,
             0.00805664+0.j, 0.00683594+0.j, 0.25170898+0.j,
             0.27124023+0.j, 0.04492188+0.j, 0.04736328+0.j,
             0.02075195+0.j, 0.01342773+0.j, 0.01049805+0.j,
             0.01953125+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00097656+0.j, 0.        +0.j, 0.09667969+0.j,
             0.109375  +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.40625   +0.j,
             0.38476562+0.j, 0.00195312+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.0518034323886809
================= Counts after running on backend =====================
{'1110': 25, '0010': 395, '0000': 46, '0110': 29, '1000': 1370, '1100': 88, '0001': 68, '1111': 60, '1010': 85, '1011': 63, '0111': 16, '0011': 383, '1101': 47, '1001': 1377, '0101': 28, '0100': 16}
Statevector([0.01123047+0.j, 0.01660156+0.j, 0.09643555+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00097656+0.j, 0.00097656+0.j, 0.09179688+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.08387693758072601
Fidelity Comparison	0.0518034323886809	0.08387693758072601
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.26s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1101': 124, '1011': 89, '1110': 190, '1010': 858, '0111': 107, '0011': 85, '0100': 121, '0010': 581, '0000': 97, '0101': 568, '1001': 115, '1100': 49, '0110': 840, '1000': 104, '1111': 46, '0001': 122}
Statevector([0.02368164+0.j, 0.02978516+0.j, 0.1418457 +0.j,
             0.02075195+0.j, 0.02954102+0.j, 0.13867188+0.j,
             0.20507812+0.j, 0.02612305+0.j, 0.02539062+0.j,
             0.02807617+0.j, 0.20947266+0.j, 0.02172852+0.j,
             0.01196289+0.j, 0.03027344+0.j, 0.04638672+0.j,
             0.01123047+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.19824219+0.j,
             0.        +0.j, 0.        +0.j, 0.17871094+0.j,
             0.30566406+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.31738281+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.033149491039750956
================= Counts after running on backend =====================
{'1110': 165, '1100': 35, '0000': 72, '1010': 850, '1111': 53, '0001': 129, '0010': 604, '1101': 141, '0100': 116, '0011': 120, '0111': 130, '1011': 120, '0101': 546, '1001': 115, '0110': 824, '1000': 76}
Statevector([0.01757812+0.j, 0.03149414+0.j, 0.14746094+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.18945312+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.0329619701935826
Fidelity Comparison	0.033149491039750956	0.0329619701935826
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.23s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 360, '1011': 154, '0011': 168, '0111': 214, '0001': 542, '1111': 97, '0010': 484, '0000': 233, '1100': 153, '1101': 234, '1000': 174, '0110': 285, '1010': 256, '1001': 235, '0101': 203, '0100': 304}
Statevector([0.05688477+0.j, 0.13232422+0.j, 0.11816406+0.j,
             0.04101562+0.j, 0.07421875+0.j, 0.04956055+0.j,
             0.06958008+0.j, 0.05224609+0.j, 0.04248047+0.j,
             0.05737305+0.j, 0.0625    +0.j, 0.03759766+0.j,
             0.03735352+0.j, 0.05712891+0.j, 0.08789062+0.j,
             0.02368164+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.04492188+0.j, 0.18261719+0.j, 0.15917969+0.j,
             0.00097656+0.j, 0.10253906+0.j, 0.04492188+0.j,
             0.06835938+0.j, 0.04589844+0.j, 0.03808594+0.j,
             0.046875  +0.j, 0.06152344+0.j, 0.01464844+0.j,
             0.00878906+0.j, 0.04101562+0.j, 0.13574219+0.j,
             0.00390625+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.007388819439313465
================= Counts after running on backend =====================
{'0000': 196, '1111': 78, '0001': 731, '0010': 543, '1100': 97, '0100': 328, '1101': 193, '1000': 163, '0110': 269, '1011': 109, '0011': 97, '0111': 155, '1001': 200, '0101': 197, '1110': 458, '1010': 282}
Statevector([0.04785156+0.j, 0.1784668 +0.j, 0.13256836+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.02832031+0.j, 0.21289062+0.j, 0.171875  +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.010799511507286752
Fidelity Comparison	0.007388819439313465	0.010799511507286752
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.31s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7fd5acd334f0>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fd5acb265f0>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7fd5aac27420>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.54s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1010': 96, '0001': 108, '1000': 98, '0110': 144, '1101': 704, '1100': 682, '0000': 104, '0010': 96, '1111': 638, '0100': 143, '1011': 104, '0011': 112, '0111': 145, '1110': 649, '1001': 116, '0101': 157}
Statevector([0.02539062+0.j, 0.02636719+0.j, 0.0234375 +0.j,
             0.02734375+0.j, 0.03491211+0.j, 0.03833008+0.j,
             0.03515625+0.j, 0.03540039+0.j, 0.02392578+0.j,
             0.02832031+0.j, 0.0234375 +0.j, 0.02539062+0.j,
             0.16650391+0.j, 0.171875  +0.j, 0.15844727+0.j,
             0.15576172+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.28222656+0.j, 0.25097656+0.j, 0.23925781+0.j,
             0.22753906+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.02672572459374578
================= Counts after running on backend =====================
{'0000': 39, '0100': 74, '1100': 851, '0101': 74, '1001': 84, '1101': 794, '1000': 55, '0110': 87, '1011': 78, '0011': 44, '0111': 87, '1110': 847, '1111': 811, '0001': 37, '0010': 62, '1010': 72}
Statevector([0.00952148+0.j, 0.0090332 +0.j, 0.01513672+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.04068537943390993
Fidelity Comparison	0.02672572459374578	0.04068537943390993
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.14s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f07f99bc100>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f07f9a2a860>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.51s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f5e954a4160>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f5e95316bc0>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7f5e932ca1b0>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.50s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7eff70b0fc70>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7eff707c34c0>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7eff6fabbec0>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.48s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 86, '1011': 168, '1101': 194, '1111': 603, '0001': 1018, '0010': 80, '0000': 114, '0100': 94, '0101': 418, '1001': 574, '1100': 73, '0110': 81, '1000': 95, '1010': 92, '0111': 201, '0011': 205}
Statevector([0.02783203+0.j, 0.24853516+0.j, 0.01953125+0.j,
             0.05004883+0.j, 0.02294922+0.j, 0.10205078+0.j,
             0.01977539+0.j, 0.04907227+0.j, 0.02319336+0.j,
             0.14013672+0.j, 0.02246094+0.j, 0.04101562+0.j,
             0.01782227+0.j, 0.04736328+0.j, 0.02099609+0.j,
             0.1472168 +0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.46289062+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.06542969+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.20410156+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.26757812+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.03599210839843181
================= Counts after running on backend =====================
{'1100': 20, '0100': 50, '1110': 65, '0010': 31, '0000': 66, '0001': 1505, '1111': 879, '1101': 77, '0101': 349, '1001': 708, '0110': 25, '1000': 64, '1011': 89, '0111': 73, '0011': 66, '1010': 29}
Statevector([0.01611328+0.j, 0.36743164+0.j, 0.00756836+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.45214844+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.07115650477339841
Fidelity Comparison	0.03599210839843181	0.07115650477339841
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.31s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f421c93c2e0>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f421c87ac80>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.50s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7efe0c6042e0>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7efe0c4ff0a0>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7efe0b3ab100>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.51s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0000': 113, '0100': 121, '1110': 513, '1011': 479, '0111': 522, '0011': 372, '1111': 318, '0001': 102, '1100': 358, '0101': 94, '1001': 115, '1000': 417, '0110': 306, '1101': 83, '0010': 85, '1010': 98}
Statevector([0.02758789+0.j, 0.02490234+0.j, 0.02075195+0.j,
             0.09082031+0.j, 0.02954102+0.j, 0.02294922+0.j,
             0.07470703+0.j, 0.12744141+0.j, 0.10180664+0.j,
             0.02807617+0.j, 0.02392578+0.j, 0.11694336+0.j,
             0.08740234+0.j, 0.02026367+0.j, 0.12524414+0.j,
             0.07763672+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.10351562+0.j, 0.        +0.j, 0.        +0.j,
             0.09082031+0.j, 0.16992188+0.j, 0.15527344+0.j,
             0.        +0.j, 0.        +0.j, 0.12988281+0.j,
             0.10253906+0.j, 0.        +0.j, 0.16308594+0.j,
             0.08496094+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.01098763499527422
================= Counts after running on backend =====================
{'0100': 100, '1010': 79, '0010': 85, '1011': 421, '0111': 564, '0011': 382, '1111': 348, '0001': 76, '1100': 377, '0000': 90, '1110': 538, '1001': 89, '0101': 70, '1000': 470, '0110': 318, '1101': 89}
Statevector([0.02197266+0.j, 0.01855469+0.j, 0.02075195+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.01197963793680401
Fidelity Comparison	0.01098763499527422	0.01197963793680401
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.07s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 60, '1110': 137, '0010': 346, '0000': 1036, '0100': 347, '1100': 278, '0111': 71, '0011': 136, '1011': 71, '1010': 176, '1101': 122, '1000': 471, '0110': 139, '1001': 182, '0101': 143, '0001': 381}
Statevector([0.25292969+0.j, 0.09301758+0.j, 0.08447266+0.j,
             0.03320312+0.j, 0.0847168 +0.j, 0.03491211+0.j,
             0.03393555+0.j, 0.01733398+0.j, 0.11499023+0.j,
             0.04443359+0.j, 0.04296875+0.j, 0.01733398+0.j,
             0.06787109+0.j, 0.02978516+0.j, 0.03344727+0.j,
             0.01464844+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.30957031+0.j, 0.11035156+0.j, 0.11425781+0.j,
             0.02246094+0.j, 0.10742188+0.j, 0.01171875+0.j,
             0.02539062+0.j, 0.00390625+0.j, 0.12011719+0.j,
             0.02929688+0.j, 0.03417969+0.j, 0.01074219+0.j,
             0.06347656+0.j, 0.01464844+0.j, 0.01953125+0.j,
             0.00292969+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.017321232926917673
================= Counts after running on backend =====================
{'1011': 78, '1111': 42, '0010': 386, '0000': 1064, '1110': 99, '0101': 134, '1001': 164, '1100': 295, '0001': 393, '1010': 192, '0100': 386, '1000': 399, '0110': 134, '1101': 110, '0111': 60, '0011': 160}
Statevector([0.25976562+0.j, 0.09594727+0.j, 0.09423828+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.31445312+0.j, 0.1171875 +0.j, 0.09277344+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.017833736728789518
Fidelity Comparison	0.017321232926917673	0.017833736728789518
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.35s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 120, '1010': 183, '0111': 710, '0011': 134, '1011': 289, '0000': 192, '0010': 177, '1101': 69, '0110': 71, '1000': 824, '1100': 237, '1110': 216, '1001': 211, '0101': 154, '0100': 114, '0001': 395}
Statevector([0.046875  +0.j, 0.09643555+0.j, 0.04321289+0.j,
             0.03271484+0.j, 0.02783203+0.j, 0.03759766+0.j,
             0.01733398+0.j, 0.17333984+0.j, 0.20117188+0.j,
             0.05151367+0.j, 0.04467773+0.j, 0.07055664+0.j,
             0.05786133+0.j, 0.0168457 +0.j, 0.05273438+0.j,
             0.02929688+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.02148438+0.j, 0.13769531+0.j, 0.03027344+0.j,
             0.        +0.j, 0.        +0.j, 0.03027344+0.j,
             0.        +0.j, 0.29003906+0.j, 0.29882812+0.j,
             0.03222656+0.j, 0.        +0.j, 0.06152344+0.j,
             0.03417969+0.j, 0.        +0.j, 0.06347656+0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.019168244796276213
================= Counts after running on backend =====================
{'0000': 193, '1001': 194, '0101': 158, '0001': 456, '1111': 91, '1100': 189, '0010': 181, '1010': 151, '1101': 70, '1000': 822, '0110': 77, '1011': 285, '0011': 103, '0111': 807, '0100': 96, '1110': 223}
Statevector([0.04711914+0.j, 0.11132812+0.j, 0.04418945+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.01464844+0.j, 0.1328125 +0.j, 0.03222656+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.021399736448302065
Fidelity Comparison	0.019168244796276213	0.021399736448302065
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.13s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 108, '0001': 114, '0100': 750, '1100': 219, '0000': 146, '0010': 610, '1101': 120, '1000': 555, '0110': 403, '0111': 131, '0011': 199, '1011': 81, '1010': 112, '1001': 163, '0101': 237, '1110': 148}
Statevector([0.03564453+0.j, 0.02783203+0.j, 0.14892578+0.j,
             0.04858398+0.j, 0.18310547+0.j, 0.05786133+0.j,
             0.09838867+0.j, 0.03198242+0.j, 0.13549805+0.j,
             0.03979492+0.j, 0.02734375+0.j, 0.01977539+0.j,
             0.0534668 +0.j, 0.02929688+0.j, 0.03613281+0.j,
             0.02636719+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.01074219+0.j, 0.00292969+0.j, 0.18164062+0.j,
             0.04101562+0.j, 0.25097656+0.j, 0.046875  +0.j,
             0.13183594+0.j, 0.02636719+0.j, 0.20800781+0.j,
             0.02832031+0.j, 0.00976562+0.j, 0.00585938+0.j,
             0.03125   +0.j, 0.0078125 +0.j, 0.01464844+0.j,
             0.00195312+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.015416961661912865
================= Counts after running on backend =====================
{'1010': 129, '1110': 132, '0010': 616, '0000': 147, '1101': 103, '1111': 79, '0001': 100, '1011': 78, '0011': 167, '0111': 137, '0110': 421, '1000': 624, '1100': 238, '0100': 758, '1001': 181, '0101': 186}
Statevector([0.03588867+0.j, 0.02441406+0.j, 0.15039062+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00683594+0.j, 0.        +0.j, 0.20703125+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.017228728004795357
Fidelity Comparison	0.015416961661912865	0.017228728004795357
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.27s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0101': 33, '1001': 23, '1101': 39, '1010': 613, '1110': 786, '0110': 977, '1000': 90, '1100': 127, '0010': 822, '0000': 100, '0100': 115, '0001': 32, '1111': 98, '0111': 87, '0011': 72, '1011': 82}
Statevector([0.02441406+0.j, 0.0078125 +0.j, 0.20068359+0.j,
             0.01757812+0.j, 0.02807617+0.j, 0.00805664+0.j,
             0.23852539+0.j, 0.02124023+0.j, 0.02197266+0.j,
             0.00561523+0.j, 0.1496582 +0.j, 0.02001953+0.j,
             0.03100586+0.j, 0.00952148+0.j, 0.19189453+0.j,
             0.02392578+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.26269531+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.33886719+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.15429688+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.24414062+0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.041407411520197
================= Counts after running on backend =====================
{'0001': 24, '1101': 21, '1010': 683, '1100': 78, '0101': 17, '1001': 20, '1110': 828, '0010': 875, '0000': 72, '1000': 79, '0110': 1092, '0100': 88, '1011': 55, '0011': 65, '0111': 60, '1111': 39}
Statevector([0.01757812+0.j, 0.00585938+0.j, 0.21362305+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.24511719+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.04836980489704956
Fidelity Comparison	0.041407411520197	0.04836980489704956
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.28s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0000': 107, '1111': 214, '0001': 202, '1110': 1017, '1101': 933, '1100': 243, '0110': 224, '1000': 178, '0101': 95, '1001': 212, '1010': 73, '0010': 169, '0100': 79, '1011': 52, '0111': 204, '0011': 94}
Statevector([0.02612305+0.j, 0.04931641+0.j, 0.04125977+0.j,
             0.02294922+0.j, 0.01928711+0.j, 0.02319336+0.j,
             0.0546875 +0.j, 0.04980469+0.j, 0.04345703+0.j,
             0.05175781+0.j, 0.01782227+0.j, 0.01269531+0.j,
             0.05932617+0.j, 0.2277832 +0.j, 0.24829102+0.j,
             0.05224609+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.02539062+0.j, 0.        +0.j, 0.        +0.j,
             0.01464844+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.47558594+0.j, 0.484375  +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.053242410402219775
================= Counts after running on backend =====================
{'0000': 37, '1011': 23, '0100': 26, '1101': 1434, '1110': 1483, '0011': 34, '0111': 76, '1111': 142, '0001': 92, '0101': 50, '1001': 158, '0110': 152, '1000': 75, '1100': 150, '0010': 89, '1010': 75}
Statevector([0.0090332 +0.j, 0.02246094+0.j, 0.02172852+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.1201896160073943
Fidelity Comparison	0.053242410402219775	0.1201896160073943
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.15s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1011': 73, '0011': 142, '0111': 809, '1100': 346, '0101': 154, '1001': 57, '1101': 161, '1000': 65, '0110': 179, '0001': 1053, '1111': 100, '1010': 475, '0000': 147, '0010': 87, '0100': 183, '1110': 65}
Statevector([0.03588867+0.j, 0.25708008+0.j, 0.02124023+0.j,
             0.03466797+0.j, 0.04467773+0.j, 0.03759766+0.j,
             0.04370117+0.j, 0.19750977+0.j, 0.01586914+0.j,
             0.01391602+0.j, 0.1159668 +0.j, 0.01782227+0.j,
             0.08447266+0.j, 0.03930664+0.j, 0.01586914+0.j,
             0.02441406+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.45117188+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.30957031+0.j, 0.        +0.j,
             0.        +0.j, 0.13085938+0.j, 0.        +0.j,
             0.10839844+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.040587141826620154
================= Counts after running on backend =====================
{'1111': 52, '0010': 53, '1011': 31, '1100': 379, '1001': 68, '0101': 85, '1110': 46, '0111': 1036, '0011': 83, '0001': 1357, '1000': 46, '0110': 83, '1101': 72, '1010': 554, '0100': 64, '0000': 87}
Statevector([0.02124023+0.j, 0.33129883+0.j, 0.01293945+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.41113281+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.061876192427234855
Fidelity Comparison	0.040587141826620154	0.061876192427234855
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.41s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f6326494460>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f63264947c0>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.51s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0100': 103, '1110': 108, '1111': 108, '0001': 1342, '1100': 166, '1001': 265, '0101': 377, '1101': 97, '1000': 559, '0110': 71, '1011': 104, '0111': 99, '0011': 118, '1010': 145, '0000': 330, '0010': 104}
Statevector([0.08056641+0.j, 0.32763672+0.j, 0.02539062+0.j,
             0.02880859+0.j, 0.02514648+0.j, 0.09204102+0.j,
             0.01733398+0.j, 0.02416992+0.j, 0.13647461+0.j,
             0.06469727+0.j, 0.03540039+0.j, 0.02539062+0.j,
             0.04052734+0.j, 0.02368164+0.j, 0.02636719+0.j,
             0.02636719+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00878906+0.j, 0.7421875 +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.01269531+0.j,
             0.        +0.j, 0.        +0.j, 0.19628906+0.j,
             0.01660156+0.j, 0.00976562+0.j, 0.00195312+0.j,
             0.00390625+0.j, 0.00097656+0.j, 0.00488281+0.j,
             0.00195312+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.07489198360985938
================= Counts after running on backend =====================
{'1101': 41, '0001': 2074, '1111': 44, '0011': 98, '0111': 58, '1011': 67, '1001': 196, '0101': 201, '1110': 64, '0110': 46, '1000': 665, '1100': 63, '1010': 108, '0000': 239, '0010': 60, '0100': 72}
Statevector([0.05834961+0.j, 0.50634766+0.j, 0.01464844+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.01074219+0.j, 0.7265625 +0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.16259727821397973
Fidelity Comparison	0.07489198360985938	0.16259727821397973
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.33s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0010': 109, '1110': 271, '0001': 212, '1111': 129, '1100': 301, '0101': 674, '1001': 393, '0100': 344, '0011': 95, '0111': 170, '1011': 146, '1101': 533, '1000': 171, '0110': 265, '1010': 111, '0000': 172}
Statevector([0.04199219+0.j, 0.05175781+0.j, 0.02661133+0.j,
             0.02319336+0.j, 0.08398438+0.j, 0.16455078+0.j,
             0.06469727+0.j, 0.04150391+0.j, 0.04174805+0.j,
             0.09594727+0.j, 0.02709961+0.j, 0.03564453+0.j,
             0.07348633+0.j, 0.13012695+0.j, 0.06616211+0.j,
             0.03149414+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00683594+0.j, 0.00488281+0.j, 0.01464844+0.j,
             0.00097656+0.j, 0.10351562+0.j, 0.2421875 +0.j,
             0.10058594+0.j, 0.03027344+0.j, 0.02148438+0.j,
             0.07421875+0.j, 0.01464844+0.j, 0.02246094+0.j,
             0.08398438+0.j, 0.18066406+0.j, 0.07421875+0.j,
             0.02441406+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.010371001030762272
================= Counts after running on backend =====================
{'0000': 72, '1011': 116, '1100': 313, '0100': 400, '1001': 348, '0101': 820, '1110': 306, '1000': 143, '0110': 336, '1101': 583, '1111': 131, '0001': 98, '0111': 184, '0011': 72, '0010': 80, '1010': 94}
Statevector([0.01757812+0.j, 0.02392578+0.j, 0.01953125+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.01074219+0.j, 0.        +0.j, 0.01367188+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.01310338205280459
Fidelity Comparison	0.010371001030762272	0.01310338205280459
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.26s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1100': 149, '1101': 300, '1000': 202, '0110': 119, '0010': 434, '0000': 245, '0011': 365, '0111': 220, '1011': 217, '1010': 734, '0001': 184, '1111': 220, '1001': 143, '0101': 286, '1110': 142, '0100': 136}
Statevector([0.05981445+0.j, 0.04492188+0.j, 0.10595703+0.j,
             0.08911133+0.j, 0.03320312+0.j, 0.06982422+0.j,
             0.02905273+0.j, 0.05371094+0.j, 0.04931641+0.j,
             0.03491211+0.j, 0.17919922+0.j, 0.05297852+0.j,
             0.03637695+0.j, 0.07324219+0.j, 0.03466797+0.j,
             0.05371094+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.00292969+0.j, 0.12695312+0.j,
             0.11328125+0.j, 0.00390625+0.j, 0.09765625+0.j,
             0.00097656+0.j, 0.06835938+0.j, 0.00585938+0.j,
             0.00683594+0.j, 0.37402344+0.j, 0.02832031+0.j,
             0.00585938+0.j, 0.09082031+0.j, 0.00488281+0.j,
             0.06933594+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.013027348616617473
================= Counts after running on backend =====================
{'0100': 70, '0001': 84, '1100': 65, '0010': 527, '0000': 121, '1011': 217, '0011': 375, '0111': 242, '1101': 303, '0110': 66, '1000': 135, '1001': 115, '0101': 325, '1110': 73, '1010': 1145, '1111': 233}
Statevector([0.02954102+0.j, 0.02050781+0.j, 0.12866211+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00488281+0.j, 0.00292969+0.j, 0.15136719+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.024557099023297724
Fidelity Comparison	0.013027348616617473	0.024557099023297724
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.39s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 148, '1010': 157, '1011': 173, '0011': 780, '0111': 153, '0010': 800, '0000': 509, '1100': 83, '1000': 105, '0110': 123, '1101': 101, '0001': 516, '1001': 110, '0101': 145, '1110': 74, '0100': 119}
Statevector([0.12426758+0.j, 0.12597656+0.j, 0.1953125 +0.j,
             0.19042969+0.j, 0.02905273+0.j, 0.03540039+0.j,
             0.0300293 +0.j, 0.03735352+0.j, 0.02563477+0.j,
             0.02685547+0.j, 0.03833008+0.j, 0.04223633+0.j,
             0.02026367+0.j, 0.0246582 +0.j, 0.01806641+0.j,
             0.03613281+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.14550781+0.j, 0.12402344+0.j, 0.34570312+0.j,
             0.32421875+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.00195312+0.j,
             0.01269531+0.j, 0.00585938+0.j, 0.02832031+0.j,
             0.00683594+0.j, 0.        +0.j, 0.        +0.j,
             0.00488281+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.02725591668928473
================= Counts after running on backend =====================
{'1110': 62, '1101': 87, '1011': 138, '0110': 152, '1000': 105, '1100': 69, '0010': 950, '0000': 487, '1001': 98, '0101': 80, '0011': 895, '0111': 141, '1111': 118, '0001': 500, '0100': 97, '1010': 117}
Statevector([0.11889648+0.j, 0.12207031+0.j, 0.23193359+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.12695312+0.j, 0.15820312+0.j, 0.33105469+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.03298803346893919
Fidelity Comparison	0.02725591668928473	0.03298803346893919
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.29s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0100': 83, '1111': 96, '0001': 155, '0101': 72, '1001': 398, '1100': 583, '0010': 371, '0000': 285, '1011': 78, '0111': 191, '0011': 220, '1000': 681, '0110': 395, '1101': 304, '1110': 76, '1010': 108}
Statevector([0.06958008+0.j, 0.0378418 +0.j, 0.09057617+0.j,
             0.05371094+0.j, 0.02026367+0.j, 0.01757812+0.j,
             0.09643555+0.j, 0.04663086+0.j, 0.16625977+0.j,
             0.09716797+0.j, 0.02636719+0.j, 0.01904297+0.j,
             0.14233398+0.j, 0.07421875+0.j, 0.01855469+0.j,
             0.0234375 +0.j],
            dims=(2, 2, 2, 2))
Statevector([0.0625    +0.j, 0.03613281+0.j, 0.08984375+0.j,
             0.0546875 +0.j, 0.        +0.j, 0.        +0.j,
             0.12304688+0.j, 0.05566406+0.j, 0.19628906+0.j,
             0.10253906+0.j, 0.00488281+0.j, 0.        +0.j,
             0.18945312+0.j, 0.08496094+0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.011502864028045678
================= Counts after running on backend =====================
{'0100': 82, '1111': 103, '1101': 301, '0010': 365, '0000': 237, '0110': 385, '1000': 682, '1100': 552, '0101': 98, '1001': 370, '1110': 120, '0001': 183, '0111': 202, '0011': 204, '1011': 102, '1010': 110}
Statevector([0.05786133+0.j, 0.04467773+0.j, 0.08911133+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.046875  +0.j, 0.02539062+0.j, 0.109375  +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.01151370857138545
Fidelity Comparison	0.011502864028045678	0.01151370857138545
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.39s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1000': 183, '0110': 186, '1010': 115, '1011': 106, '0111': 946, '0011': 474, '1101': 428, '1110': 88, '0001': 179, '1111': 135, '0010': 224, '0000': 200, '0100': 220, '0101': 213, '1001': 223, '1100': 176}
Statevector([0.04882812+0.j, 0.04370117+0.j, 0.0546875 +0.j,
             0.11572266+0.j, 0.05371094+0.j, 0.05200195+0.j,
             0.04541016+0.j, 0.23095703+0.j, 0.04467773+0.j,
             0.05444336+0.j, 0.02807617+0.j, 0.02587891+0.j,
             0.04296875+0.j, 0.10449219+0.j, 0.02148438+0.j,
             0.03295898+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.01367188+0.j, 0.01855469+0.j, 0.05664062+0.j,
             0.11425781+0.j, 0.00488281+0.j, 0.00976562+0.j,
             0.04589844+0.j, 0.46777344+0.j, 0.00488281+0.j,
             0.05859375+0.j, 0.01269531+0.j, 0.00195312+0.j,
             0.00585938+0.j, 0.16796875+0.j, 0.015625  +0.j,
             0.00097656+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.02270275767136809
================= Counts after running on backend =====================
{'1010': 82, '1100': 113, '0011': 476, '0111': 1409, '1011': 80, '0001': 107, '1111': 102, '0101': 122, '1001': 230, '1000': 113, '0110': 225, '1101': 528, '1110': 87, '0010': 213, '0000': 105, '0100': 104}
Statevector([0.02563477+0.j, 0.02612305+0.j, 0.05200195+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.01171875+0.j, 0.01953125+0.j, 0.04199219+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.03892115818422326
Fidelity Comparison	0.02270275767136809	0.03892115818422326
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.32s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 96, '0010': 66, '0101': 630, '1001': 706, '0110': 64, '1000': 144, '1100': 113, '1011': 642, '0111': 602, '0011': 209, '0000': 69, '1010': 120, '1111': 183, '0001': 194, '1101': 193, '0100': 65}
Statevector([0.0168457 +0.j, 0.04736328+0.j, 0.01611328+0.j,
             0.05102539+0.j, 0.01586914+0.j, 0.15380859+0.j,
             0.015625  +0.j, 0.14697266+0.j, 0.03515625+0.j,
             0.17236328+0.j, 0.02929688+0.j, 0.15673828+0.j,
             0.02758789+0.j, 0.04711914+0.j, 0.0234375 +0.j,
             0.04467773+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00097656+0.j, 0.02929688+0.j, 0.        +0.j,
             0.03125   +0.j, 0.        +0.j, 0.20996094+0.j,
             0.00195312+0.j, 0.20703125+0.j, 0.01367188+0.j,
             0.21289062+0.j, 0.00585938+0.j, 0.20800781+0.j,
             0.00488281+0.j, 0.03125   +0.j, 0.0078125 +0.j,
             0.03515625+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.019338087142614313
================= Counts after running on backend =====================
{'0000': 63, '1110': 113, '1011': 674, '0111': 630, '0011': 222, '1101': 172, '1010': 136, '1111': 191, '0001': 215, '0100': 58, '0110': 55, '1000': 138, '0101': 570, '1001': 700, '1100': 102, '0010': 57}
Statevector([0.01538086+0.j, 0.05249023+0.j, 0.01391602+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00097656+0.j, 0.03222656+0.j, 0.00195312+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.01884507486744269
Fidelity Comparison	0.019338087142614313	0.01884507486744269
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.40s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7fb9ffdf4250>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fb9ffe66e30>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.49s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1101': 35, '1011': 74, '0101': 32, '1001': 86, '1100': 155, '0000': 1062, '0010': 423, '0011': 75, '0111': 24, '1010': 424, '0001': 86, '1111': 22, '1000': 1156, '0110': 147, '0100': 164, '1110': 131}
Statevector([0.25927734+0.j, 0.02099609+0.j, 0.10327148+0.j,
             0.01831055+0.j, 0.04003906+0.j, 0.0078125 +0.j,
             0.03588867+0.j, 0.00585938+0.j, 0.28222656+0.j,
             0.02099609+0.j, 0.10351562+0.j, 0.01806641+0.j,
             0.0378418 +0.j, 0.00854492+0.j, 0.03198242+0.j,
             0.00537109+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.40234375+0.j, 0.        +0.j, 0.10839844+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.38183594+0.j,
             0.        +0.j, 0.10742188+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.05494203467657144
================= Counts after running on backend =====================
{'0111': 23, '0011': 51, '0000': 1324, '0010': 311, '0101': 37, '1001': 101, '1100': 122, '1010': 358, '1101': 29, '1000': 1266, '0110': 90, '0100': 105, '0001': 105, '1111': 25, '1011': 60, '1110': 89}
Statevector([0.32324219+0.j, 0.02563477+0.j, 0.07592773+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.38964844+0.j, 0.        +0.j, 0.09277344+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.07232832377718523
Fidelity Comparison	0.05494203467657144	0.07232832377718523
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.09s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0001': 75, '0100': 128, '1100': 488, '0110': 50, '1000': 43, '1101': 950, '1111': 975, '0000': 40, '0010': 58, '1001': 81, '0101': 189, '1110': 524, '1010': 111, '0111': 84, '0011': 99, '1011': 201}
Statevector([0.00976562+0.j, 0.01831055+0.j, 0.01416016+0.j,
             0.02416992+0.j, 0.03125   +0.j, 0.04614258+0.j,
             0.01220703+0.j, 0.02050781+0.j, 0.01049805+0.j,
             0.01977539+0.j, 0.02709961+0.j, 0.04907227+0.j,
             0.11914062+0.j, 0.23193359+0.j, 0.12792969+0.j,
             0.23803711+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.00683594+0.j, 0.02929688+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.015625  +0.j, 0.02832031+0.j,
             0.15332031+0.j, 0.32421875+0.j, 0.13867188+0.j,
             0.30371094+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.03492310681849631
================= Counts after running on backend =====================
{'1000': 46, '0110': 93, '1100': 474, '1001': 100, '0101': 215, '1110': 493, '1111': 863, '0001': 118, '1101': 846, '1010': 121, '1011': 177, '0111': 154, '0011': 137, '0100': 119, '0000': 77, '0010': 63}
Statevector([0.01879883+0.j, 0.02880859+0.j, 0.01538086+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.028014499806033655
Fidelity Comparison	0.03492310681849631	0.028014499806033655
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.39s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0010': 94, '1010': 105, '1111': 119, '0001': 168, '1011': 150, '0111': 76, '0011': 65, '0101': 178, '1001': 715, '1100': 166, '1101': 603, '1000': 604, '0110': 151, '0100': 646, '1110': 73, '0000': 183}
Statevector([0.04467773+0.j, 0.04101562+0.j, 0.02294922+0.j,
             0.01586914+0.j, 0.15771484+0.j, 0.04345703+0.j,
             0.03686523+0.j, 0.01855469+0.j, 0.14746094+0.j,
             0.17456055+0.j, 0.02563477+0.j, 0.03662109+0.j,
             0.04052734+0.j, 0.1472168 +0.j, 0.01782227+0.j,
             0.02905273+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00195312+0.j, 0.00390625+0.j, 0.        +0.j,
             0.        +0.j, 0.21289062+0.j, 0.00195312+0.j,
             0.00097656+0.j, 0.        +0.j, 0.24121094+0.j,
             0.27246094+0.j, 0.00292969+0.j, 0.00195312+0.j,
             0.00195312+0.j, 0.25585938+0.j, 0.        +0.j,
             0.00195312+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.02403238267385177
================= Counts after running on backend =====================
{'0010': 78, '1110': 85, '1101': 768, '0101': 136, '1001': 704, '0110': 111, '1000': 646, '1100': 157, '0100': 679, '0000': 156, '1010': 70, '1111': 129, '0001': 137, '0111': 63, '0011': 59, '1011': 118}
Statevector([0.03808594+0.j, 0.03344727+0.j, 0.01904297+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00292969+0.j, 0.00097656+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.028665988300019762
Fidelity Comparison	0.02403238267385177	0.028665988300019762
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================= 1 passed, 23 warnings in 10.20s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f99a38438b0>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f99a37d5d80>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.52s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 104, '0100': 102, '1100': 265, '1000': 502, '0110': 415, '1101': 83, '0001': 87, '0111': 244, '0011': 500, '1011': 150, '0010': 468, '0000': 121, '1110': 444, '1001': 65, '0101': 84, '1010': 462}
Statevector([0.02954102+0.j, 0.02124023+0.j, 0.11425781+0.j,
             0.12207031+0.j, 0.02490234+0.j, 0.02050781+0.j,
             0.10131836+0.j, 0.05957031+0.j, 0.12255859+0.j,
             0.01586914+0.j, 0.11279297+0.j, 0.03662109+0.j,
             0.06469727+0.j, 0.02026367+0.j, 0.10839844+0.j,
             0.02539062+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00878906+0.j, 0.        +0.j, 0.12402344+0.j,
             0.17675781+0.j, 0.00390625+0.j, 0.        +0.j,
             0.12792969+0.j, 0.05859375+0.j, 0.16113281+0.j,
             0.        +0.j, 0.12695312+0.j, 0.00488281+0.j,
             0.06347656+0.j, 0.        +0.j, 0.14257812+0.j,
             0.00097656+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.011318781239481268
================= Counts after running on backend =====================
{'0001': 59, '1111': 84, '0011': 518, '0111': 303, '1011': 112, '1110': 490, '1010': 439, '0010': 443, '0000': 106, '0100': 79, '1100': 264, '0101': 85, '1001': 56, '1000': 521, '0110': 470, '1101': 67}
Statevector([0.02587891+0.j, 0.0144043 +0.j, 0.1081543 +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00878906+0.j, 0.        +0.j, 0.12109375+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.012155797668128798
Fidelity Comparison	0.011318781239481268	0.012155797668128798
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.23s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1100': 67, '0110': 138, '1000': 247, '1110': 87, '0000': 308, '0010': 620, '1011': 136, '0111': 484, '0011': 113, '0001': 297, '1111': 307, '1010': 483, '1101': 99, '0101': 105, '1001': 509, '0100': 96}
Statevector([0.07519531+0.j, 0.07250977+0.j, 0.15136719+0.j,
             0.02758789+0.j, 0.0234375 +0.j, 0.02563477+0.j,
             0.03369141+0.j, 0.11816406+0.j, 0.06030273+0.j,
             0.12426758+0.j, 0.11791992+0.j, 0.03320312+0.j,
             0.01635742+0.j, 0.02416992+0.j, 0.02124023+0.j,
             0.07495117+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.03417969+0.j, 0.0859375 +0.j, 0.18066406+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.18847656+0.j, 0.03222656+0.j,
             0.19042969+0.j, 0.1953125 +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.09277344+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.012998628085426844
================= Counts after running on backend =====================
{'1110': 71, '1101': 48, '0011': 84, '0111': 594, '1011': 79, '1010': 583, '1100': 39, '0010': 664, '0000': 266, '0001': 352, '1111': 286, '0100': 48, '1000': 216, '0110': 93, '1001': 608, '0101': 65}
Statevector([0.06494141+0.j, 0.0859375 +0.j, 0.16210938+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.02929688+0.j, 0.07714844+0.j, 0.20996094+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.017593908312449003
Fidelity Comparison	0.012998628085426844	0.017593908312449003
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.13s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 46, '1111': 15, '1101': 46, '0100': 226, '0010': 288, '0000': 1231, '1100': 223, '1001': 237, '0101': 48, '0001': 253, '1010': 225, '1011': 80, '0111': 20, '0011': 93, '1000': 1007, '0110': 58}
Statevector([0.30053711+0.j, 0.06176758+0.j, 0.0703125 +0.j,
             0.02270508+0.j, 0.05517578+0.j, 0.01171875+0.j,
             0.01416016+0.j, 0.00488281+0.j, 0.24584961+0.j,
             0.05786133+0.j, 0.05493164+0.j, 0.01953125+0.j,
             0.05444336+0.j, 0.01123047+0.j, 0.01123047+0.j,
             0.00366211+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.375     +0.j, 0.04492188+0.j, 0.06054688+0.j,
             0.00878906+0.j, 0.01757812+0.j, 0.00097656+0.j,
             0.00488281+0.j, 0.        +0.j, 0.34863281+0.j,
             0.05078125+0.j, 0.06738281+0.j, 0.00585938+0.j,
             0.01367188+0.j, 0.        +0.j, 0.00097656+0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.045883384869341626
================= Counts after running on backend =====================
{'1111': 6, '0010': 300, '0000': 1330, '0110': 26, '1000': 1245, '1100': 103, '0001': 283, '1101': 15, '0111': 9, '0011': 80, '1011': 69, '1010': 263, '0100': 109, '1001': 191, '0101': 29, '1110': 38}
Statevector([0.32470703+0.j, 0.0690918 +0.j, 0.07324219+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.33789062+0.j, 0.05761719+0.j, 0.07226562+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.05545445661988424
Fidelity Comparison	0.045883384869341626	0.05545445661988424
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.23s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0000': 192, '1101': 876, '0111': 94, '0011': 88, '1011': 122, '1100': 193, '0110': 39, '1000': 249, '1110': 44, '1001': 853, '0101': 491, '1010': 52, '0010': 43, '0100': 159, '0001': 478, '1111': 123}
Statevector([0.046875  +0.j, 0.11669922+0.j, 0.01049805+0.j,
             0.02148438+0.j, 0.03881836+0.j, 0.11987305+0.j,
             0.00952148+0.j, 0.02294922+0.j, 0.06079102+0.j,
             0.20825195+0.j, 0.01269531+0.j, 0.02978516+0.j,
             0.04711914+0.j, 0.21386719+0.j, 0.01074219+0.j,
             0.0300293 +0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.18164062+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.1328125 +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.35351562+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.33203125+0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.03303265066847416
================= Counts after running on backend =====================
{'0010': 34, '1011': 91, '1111': 111, '0001': 507, '1101': 1026, '0011': 76, '0111': 69, '1110': 68, '0100': 85, '1100': 106, '0101': 567, '1001': 1037, '0110': 39, '1000': 125, '0000': 89, '1010': 66}
Statevector([0.02172852+0.j, 0.1237793 +0.j, 0.00830078+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.15234375+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.046305784108483294
Fidelity Comparison	0.03303265066847416	0.046305784108483294
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.36s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1011': 76, '1110': 198, '0111': 162, '0011': 159, '1001': 94, '0101': 161, '0010': 257, '0000': 252, '0001': 186, '1111': 75, '0100': 1029, '1101': 77, '1100': 192, '0110': 1083, '1000': 54, '1010': 41}
Statevector([0.06152344+0.j, 0.04541016+0.j, 0.06274414+0.j,
             0.03881836+0.j, 0.2512207 +0.j, 0.03930664+0.j,
             0.2644043 +0.j, 0.03955078+0.j, 0.01318359+0.j,
             0.02294922+0.j, 0.01000977+0.j, 0.01855469+0.j,
             0.046875  +0.j, 0.01879883+0.j, 0.04833984+0.j,
             0.01831055+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.00683594+0.j, 0.        +0.j,
             0.015625  +0.j, 0.49316406+0.j, 0.01660156+0.j,
             0.453125  +0.j, 0.01464844+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.06044226489052562
================= Counts after running on backend =====================
{'1100': 118, '1000': 23, '0110': 1473, '1101': 27, '1010': 11, '0011': 122, '0111': 140, '1011': 16, '0100': 1483, '1110': 127, '1001': 26, '0101': 131, '0010': 115, '0000': 137, '1111': 34, '0001': 113}
Statevector([0.03344727+0.j, 0.02758789+0.j, 0.02807617+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.      +0.j, 0.015625+0.j, 0.      +0.j, ..., 0.      +0.j,
             0.      +0.j, 0.      +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.11359994408218199
Fidelity Comparison	0.06044226489052562	0.11359994408218199
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.37s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 141, '1101': 121, '0111': 359, '0011': 323, '1011': 119, '1100': 695, '1010': 398, '1000': 115, '0110': 228, '1001': 23, '0101': 693, '1110': 388, '0000': 36, '0010': 213, '0001': 140, '0100': 104}
Statevector([0.00878906+0.j, 0.03417969+0.j, 0.05200195+0.j,
             0.07885742+0.j, 0.02539062+0.j, 0.16918945+0.j,
             0.05566406+0.j, 0.08764648+0.j, 0.02807617+0.j,
             0.00561523+0.j, 0.09716797+0.j, 0.02905273+0.j,
             0.16967773+0.j, 0.02954102+0.j, 0.09472656+0.j,
             0.03442383+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.01464844+0.j, 0.04882812+0.j,
             0.08691406+0.j, 0.        +0.j, 0.21972656+0.j,
             0.04882812+0.j, 0.08789062+0.j, 0.01953125+0.j,
             0.        +0.j, 0.10546875+0.j, 0.02539062+0.j,
             0.20507812+0.j, 0.        +0.j, 0.10644531+0.j,
             0.03125   +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.013220560827903682
================= Counts after running on backend =====================
{'0100': 62, '0001': 147, '1111': 133, '1100': 706, '0110': 222, '1000': 175, '1001': 28, '0101': 678, '1110': 408, '1010': 395, '0000': 46, '0010': 215, '1011': 129, '0111': 339, '0011': 328, '1101': 85}
Statevector([0.01123047+0.j, 0.03588867+0.j, 0.05249023+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.01660156+0.j, 0.06152344+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.013282642954948187
Fidelity Comparison	0.013220560827903682	0.013282642954948187
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.07s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1010': 162, '0000': 241, '0010': 184, '1100': 1218, '0110': 104, '1000': 1263, '0101': 59, '1001': 67, '0100': 388, '1011': 37, '0011': 50, '0111': 15, '1110': 165, '1101': 67, '1111': 38, '0001': 38}
Statevector([0.05883789+0.j, 0.00927734+0.j, 0.04492188+0.j,
             0.01220703+0.j, 0.09472656+0.j, 0.0144043 +0.j,
             0.02539062+0.j, 0.00366211+0.j, 0.30834961+0.j,
             0.01635742+0.j, 0.03955078+0.j, 0.0090332 +0.j,
             0.29736328+0.j, 0.01635742+0.j, 0.0402832 +0.j,
             0.00927734+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.0390625 +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.49804688+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.46289062+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.0869775060621123
================= Counts after running on backend =====================
{'1111': 20, '0111': 4, '0011': 20, '1100': 1367, '1110': 126, '1001': 55, '0101': 47, '1000': 1405, '0110': 94, '1101': 60, '0100': 429, '1011': 20, '0001': 21, '0000': 170, '0010': 125, '1010': 133}
Statevector([0.04150391+0.j, 0.00512695+0.j, 0.03051758+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.10876749600379298
Fidelity Comparison	0.0869775060621123	0.10876749600379298
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.24s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1101': 31, '1110': 94, '1010': 183, '0001': 253, '1111': 72, '0010': 1164, '0000': 672, '0011': 414, '0111': 138, '1011': 68, '1001': 57, '0101': 89, '1100': 62, '0110': 416, '1000': 104, '0100': 279}
Statevector([0.1640625 +0.j, 0.06176758+0.j, 0.28417969+0.j,
             0.10107422+0.j, 0.06811523+0.j, 0.02172852+0.j,
             0.1015625 +0.j, 0.03369141+0.j, 0.02539062+0.j,
             0.01391602+0.j, 0.04467773+0.j, 0.01660156+0.j,
             0.01513672+0.j, 0.00756836+0.j, 0.02294922+0.j,
             0.01757812+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.20898438+0.j, 0.06054688+0.j, 0.43066406+0.j,
             0.09277344+0.j, 0.05273438+0.j, 0.00976562+0.j,
             0.12304688+0.j, 0.02148438+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.03489958573572949
================= Counts after running on backend =====================
{'1100': 54, '1111': 50, '1011': 68, '0011': 424, '0111': 149, '0000': 765, '0010': 1223, '1110': 70, '0001': 243, '1000': 94, '0110': 444, '1101': 42, '0100': 233, '1010': 115, '0101': 72, '1001': 50}
Statevector([0.18676758+0.j, 0.05932617+0.j, 0.29858398+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.19042969+0.j, 0.05273438+0.j, 0.40332031+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.03669999507388866
Fidelity Comparison	0.03489958573572949	0.03669999507388866
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.13s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0010': 93, '1011': 572, '0111': 279, '0011': 187, '1110': 82, '1001': 300, '0101': 593, '1101': 179, '0100': 215, '0000': 257, '0110': 80, '1000': 223, '1100': 192, '1111': 358, '0001': 384, '1010': 102}
Statevector([0.06274414+0.j, 0.09375   +0.j, 0.02270508+0.j,
             0.0456543 +0.j, 0.05249023+0.j, 0.14477539+0.j,
             0.01953125+0.j, 0.06811523+0.j, 0.05444336+0.j,
             0.07324219+0.j, 0.02490234+0.j, 0.13964844+0.j,
             0.046875  +0.j, 0.04370117+0.j, 0.02001953+0.j,
             0.08740234+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.02734375+0.j, 0.1015625 +0.j, 0.015625  +0.j,
             0.02636719+0.j, 0.01171875+0.j, 0.23535156+0.j,
             0.0078125 +0.j, 0.06835938+0.j, 0.03320312+0.j,
             0.08886719+0.j, 0.00488281+0.j, 0.20703125+0.j,
             0.01757812+0.j, 0.03320312+0.j, 0.00292969+0.j,
             0.11816406+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.010466104688248379
================= Counts after running on backend =====================
{'0010': 111, '1100': 174, '0110': 95, '1000': 239, '0011': 197, '0111': 273, '1011': 560, '1001': 301, '0101': 571, '1110': 83, '1010': 100, '0001': 379, '1111': 354, '0100': 217, '0000': 251, '1101': 191}
Statevector([0.0612793 +0.j, 0.0925293 +0.j, 0.02709961+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.02539062+0.j, 0.10253906+0.j, 0.01269531+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.010081734096786477
Fidelity Comparison	0.010466104688248379	0.010081734096786477
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.21s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f425eb9c670>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f425ea6a8f0>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7f425dbf5300>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.50s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0011': 112, '0111': 113, '0001': 262, '1110': 281, '1111': 371, '0000': 447, '0010': 184, '1010': 424, '1100': 153, '0101': 322, '1001': 192, '1101': 206, '1000': 234, '0110': 108, '1011': 404, '0100': 283}
Statevector([0.10913086+0.j, 0.06396484+0.j, 0.04492188+0.j,
             0.02734375+0.j, 0.0690918 +0.j, 0.07861328+0.j,
             0.02636719+0.j, 0.02758789+0.j, 0.05712891+0.j,
             0.046875  +0.j, 0.10351562+0.j, 0.09863281+0.j,
             0.03735352+0.j, 0.05029297+0.j, 0.06860352+0.j,
             0.09057617+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.11621094+0.j, 0.08496094+0.j, 0.04003906+0.j,
             0.02734375+0.j, 0.06542969+0.j, 0.05859375+0.j,
             0.0234375 +0.j, 0.02832031+0.j, 0.05371094+0.j,
             0.04492188+0.j, 0.1015625 +0.j, 0.09765625+0.j,
             0.02636719+0.j, 0.05371094+0.j, 0.06933594+0.j,
             0.10839844+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.005590548975305865
================= Counts after running on backend =====================
{'1100': 137, '1110': 275, '1000': 217, '0110': 128, '1101': 202, '0000': 454, '0010': 224, '1011': 392, '0011': 115, '0111': 117, '1111': 331, '0001': 316, '1010': 400, '0100': 298, '1001': 205, '0101': 285}
Statevector([0.11083984+0.j, 0.07714844+0.j, 0.0546875 +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.1015625 +0.j, 0.08007812+0.j, 0.03515625+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.005440190707531656
Fidelity Comparison	0.005590548975305865	0.005440190707531656
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.35s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 83, '1100': 45, '1101': 107, '0010': 222, '0000': 312, '1000': 213, '0110': 156, '0001': 966, '1111': 33, '1011': 303, '0011': 788, '0111': 64, '1010': 191, '1001': 372, '0101': 180, '0100': 61}
Statevector([0.07617188+0.j, 0.23583984+0.j, 0.05419922+0.j,
             0.19238281+0.j, 0.01489258+0.j, 0.04394531+0.j,
             0.03808594+0.j, 0.015625  +0.j, 0.05200195+0.j,
             0.09082031+0.j, 0.04663086+0.j, 0.07397461+0.j,
             0.01098633+0.j, 0.02612305+0.j, 0.02026367+0.j,
             0.00805664+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.34667969+0.j, 0.        +0.j,
             0.38476562+0.j, 0.        +0.j, 0.03710938+0.j,
             0.03515625+0.j, 0.        +0.j, 0.        +0.j,
             0.09667969+0.j, 0.        +0.j, 0.08203125+0.j,
             0.        +0.j, 0.0078125 +0.j, 0.00976562+0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.03027725318679586
================= Counts after running on backend =====================
{'1100': 34, '1111': 25, '0100': 48, '0001': 1154, '1110': 73, '1001': 379, '0101': 195, '1011': 332, '0011': 1082, '0111': 58, '0000': 157, '0010': 129, '1000': 86, '0110': 182, '1101': 83, '1010': 79}
Statevector([0.03833008+0.j, 0.28173828+0.j, 0.03149414+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.36132812+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.046561634281317765
Fidelity Comparison	0.03027725318679586	0.046561634281317765
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.12s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 31, '1011': 60, '0011': 65, '0111': 29, '0010': 832, '0000': 831, '1100': 120, '0110': 102, '1000': 802, '1010': 807, '1101': 27, '0001': 71, '0100': 105, '1110': 93, '1001': 87, '0101': 34}
Statevector([0.20288086+0.j, 0.01733398+0.j, 0.203125  +0.j,
             0.01586914+0.j, 0.02563477+0.j, 0.00830078+0.j,
             0.02490234+0.j, 0.00708008+0.j, 0.19580078+0.j,
             0.02124023+0.j, 0.19702148+0.j, 0.01464844+0.j,
             0.02929688+0.j, 0.0065918 +0.j, 0.02270508+0.j,
             0.00756836+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.26074219+0.j, 0.        +0.j, 0.24121094+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.27050781+0.j,
             0.        +0.j, 0.22753906+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.03987661354790362
================= Counts after running on backend =====================
{'1101': 11, '1100': 43, '0101': 7, '1001': 59, '0010': 925, '0000': 865, '1010': 926, '1000': 939, '0110': 36, '1111': 7, '0001': 71, '1011': 75, '0111': 5, '0011': 56, '0100': 33, '1110': 38}
Statevector([0.21118164+0.j, 0.01733398+0.j, 0.22583008+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.25      +0.j, 0.        +0.j, 0.24121094+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.04975752390259913
Fidelity Comparison	0.03987661354790362	0.04975752390259913
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.28s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7fb45e028640>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fb45dc35270>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.50s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 183, '1101': 284, '0011': 150, '0111': 190, '1011': 229, '0001': 213, '1111': 147, '1000': 241, '0110': 342, '1010': 348, '0010': 297, '0000': 242, '0101': 343, '1001': 199, '1100': 343, '0100': 345}
Statevector([0.05908203+0.j, 0.05200195+0.j, 0.07250977+0.j,
             0.03662109+0.j, 0.08422852+0.j, 0.08374023+0.j,
             0.08349609+0.j, 0.04638672+0.j, 0.05883789+0.j,
             0.04858398+0.j, 0.08496094+0.j, 0.0559082 +0.j,
             0.08374023+0.j, 0.06933594+0.j, 0.04467773+0.j,
             0.03588867+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.015625  +0.j, 0.00976562+0.j, 0.09082031+0.j,
             0.        +0.j, 0.05371094+0.j, 0.14746094+0.j,
             0.13671875+0.j, 0.00585938+0.j, 0.01660156+0.j,
             0.02148438+0.j, 0.171875  +0.j, 0.08007812+0.j,
             0.15136719+0.j, 0.07617188+0.j, 0.02246094+0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.00587319776991535
================= Counts after running on backend =====================
{'1110': 148, '1010': 452, '1100': 486, '0101': 459, '1001': 152, '1000': 146, '0110': 437, '1101': 321, '0100': 365, '0010': 328, '0000': 109, '1111': 79, '0001': 115, '0011': 96, '0111': 118, '1011': 285}
Statevector([0.02661133+0.j, 0.02807617+0.j, 0.08007812+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00976562+0.j, 0.00683594+0.j, 0.09472656+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.008940223545380377
Fidelity Comparison	0.00587319776991535	0.008940223545380377
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.20s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 39, '1011': 25, '1010': 37, '1101': 126, '0010': 509, '0000': 304, '0110': 1122, '1000': 211, '1100': 170, '0011': 211, '0111': 368, '1001': 65, '0101': 136, '1110': 37, '0100': 663, '0001': 73}
Statevector([0.07421875+0.j, 0.01782227+0.j, 0.12426758+0.j,
             0.05151367+0.j, 0.16186523+0.j, 0.03320312+0.j,
             0.27392578+0.j, 0.08984375+0.j, 0.05151367+0.j,
             0.01586914+0.j, 0.0090332 +0.j, 0.00610352+0.j,
             0.04150391+0.j, 0.03076172+0.j, 0.0090332 +0.j,
             0.00952148+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.04394531+0.j, 0.00488281+0.j, 0.15136719+0.j,
             0.        +0.j, 0.17578125+0.j, 0.01464844+0.j,
             0.56640625+0.j, 0.        +0.j, 0.        +0.j,
             0.00976562+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.03320312+0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.043026168452570346
================= Counts after running on backend =====================
{'1011': 15, '1101': 150, '1100': 144, '1000': 90, '0110': 1512, '0100': 794, '0111': 147, '0011': 70, '0001': 48, '1111': 57, '0000': 267, '0010': 533, '1001': 42, '0101': 113, '1110': 81, '1010': 33}
Statevector([0.06518555+0.j, 0.01171875+0.j, 0.13012695+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.05761719+0.j, 0.00488281+0.j, 0.13671875+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.06637536189464299
Fidelity Comparison	0.043026168452570346	0.06637536189464299
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.08s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1010': 138, '1000': 45, '0110': 1639, '1101': 128, '0010': 243, '0000': 389, '0100': 367, '1100': 94, '1001': 72, '0101': 210, '1110': 136, '1111': 81, '0001': 104, '0011': 75, '0111': 280, '1011': 95}
Statevector([0.0949707 +0.j, 0.02539062+0.j, 0.05932617+0.j,
             0.01831055+0.j, 0.08959961+0.j, 0.05126953+0.j,
             0.40014648+0.j, 0.06835938+0.j, 0.01098633+0.j,
             0.01757812+0.j, 0.03369141+0.j, 0.02319336+0.j,
             0.02294922+0.j, 0.03125   +0.j, 0.03320312+0.j,
             0.01977539+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.08007812+0.j, 0.00097656+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.91699219+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.00195312+0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.1403445808719539
================= Counts after running on backend =====================
{'1011': 27, '1100': 121, '0010': 114, '0000': 263, '0100': 290, '1101': 129, '1110': 228, '1010': 35, '1111': 96, '0001': 37, '0011': 24, '0111': 173, '0110': 2370, '1000': 25, '0101': 133, '1001': 31}
Statevector([0.06420898+0.j, 0.0090332 +0.j, 0.02783203+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.0625+0.j, 0.    +0.j, 0.    +0.j, ..., 0.    +0.j,
             0.    +0.j, 0.    +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.2980639358213466
Fidelity Comparison	0.1403445808719539	0.2980639358213466
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.39s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1011': 60, '0010': 177, '0000': 593, '1110': 160, '1001': 224, '0101': 231, '0001': 558, '1111': 175, '0011': 169, '0111': 111, '1010': 96, '1101': 494, '0100': 247, '1100': 483, '0110': 82, '1000': 236}
Statevector([0.14477539+0.j, 0.13623047+0.j, 0.04321289+0.j,
             0.04125977+0.j, 0.06030273+0.j, 0.05639648+0.j,
             0.02001953+0.j, 0.02709961+0.j, 0.05761719+0.j,
             0.0546875 +0.j, 0.0234375 +0.j, 0.01464844+0.j,
             0.11791992+0.j, 0.12060547+0.j, 0.0390625 +0.j,
             0.04272461+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.19824219+0.j, 0.14453125+0.j, 0.00976562+0.j,
             0.00292969+0.j, 0.05761719+0.j, 0.06933594+0.j,
             0.00097656+0.j, 0.00292969+0.j, 0.05371094+0.j,
             0.0625    +0.j, 0.00097656+0.j, 0.00292969+0.j,
             0.17285156+0.j, 0.19824219+0.j, 0.01171875+0.j,
             0.01074219+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.011708029769636141
================= Counts after running on backend =====================
{'1011': 18, '1010': 31, '1101': 630, '0001': 681, '1111': 86, '0100': 273, '0010': 62, '0000': 707, '1110': 58, '1100': 654, '0101': 276, '1001': 246, '0110': 33, '1000': 251, '0111': 27, '0011': 63}
Statevector([0.17260742+0.j, 0.16625977+0.j, 0.01513672+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.18261719+0.j, 0.18066406+0.j, 0.00488281+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.018056217732521418
Fidelity Comparison	0.011708029769636141	0.018056217732521418
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.33s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f4abc734100>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f4abc5a2860>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7f4aba617d30>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.51s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1010': 204, '1101': 390, '1100': 185, '1000': 285, '0110': 155, '0100': 253, '1011': 195, '0011': 190, '0111': 158, '0010': 208, '0000': 379, '1111': 127, '0001': 468, '1001': 218, '0101': 452, '1110': 229}
Statevector([0.0925293 +0.j, 0.11425781+0.j, 0.05078125+0.j,
             0.04638672+0.j, 0.06176758+0.j, 0.11035156+0.j,
             0.0378418 +0.j, 0.03857422+0.j, 0.06958008+0.j,
             0.05322266+0.j, 0.04980469+0.j, 0.04760742+0.j,
             0.04516602+0.j, 0.09521484+0.j, 0.0559082 +0.j,
             0.03100586+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.09570312+0.j, 0.15917969+0.j, 0.01367188+0.j,
             0.01660156+0.j, 0.03027344+0.j, 0.14453125+0.j,
             0.00683594+0.j, 0.01757812+0.j, 0.08496094+0.j,
             0.02734375+0.j, 0.03417969+0.j, 0.06445312+0.j,
             0.03125   +0.j, 0.1953125 +0.j, 0.078125  +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.0070185375435016795
================= Counts after running on backend =====================
{'1110': 228, '1011': 204, '0011': 139, '0111': 159, '1001': 181, '0101': 497, '0001': 518, '1111': 114, '1010': 167, '0000': 454, '0010': 148, '1000': 310, '0110': 99, '1101': 506, '0100': 183, '1100': 189}
Statevector([0.11083984+0.j, 0.12646484+0.j, 0.03613281+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.09570312+0.j, 0.14941406+0.j, 0.015625  +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.008697570302501845
Fidelity Comparison	0.0070185375435016795	0.008697570302501845
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.17s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0001': 99, '1110': 134, '1111': 138, '0000': 87, '0010': 828, '1011': 594, '0111': 87, '0011': 663, '1100': 131, '0101': 180, '1001': 124, '1010': 351, '1101': 144, '1000': 199, '0110': 80, '0100': 257}
Statevector([0.02124023+0.j, 0.02416992+0.j, 0.20214844+0.j,
             0.16186523+0.j, 0.06274414+0.j, 0.04394531+0.j,
             0.01953125+0.j, 0.02124023+0.j, 0.04858398+0.j,
             0.03027344+0.j, 0.08569336+0.j, 0.14501953+0.j,
             0.03198242+0.j, 0.03515625+0.j, 0.03271484+0.j,
             0.03369141+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.29199219+0.j,
             0.19335938+0.j, 0.08203125+0.j, 0.06347656+0.j,
             0.        +0.j, 0.00097656+0.j, 0.04589844+0.j,
             0.01074219+0.j, 0.07421875+0.j, 0.23144531+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.00585938+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.01986911049698392
================= Counts after running on backend =====================
{'1110': 112, '1111': 151, '1010': 318, '1011': 645, '0011': 660, '0111': 63, '0100': 241, '0010': 822, '0000': 110, '1100': 123, '0110': 89, '1000': 205, '0001': 128, '1001': 128, '0101': 190, '1101': 111}
Statevector([0.02685547+0.j, 0.03125   +0.j, 0.20068359+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.30761719+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.020869645250570557
Fidelity Comparison	0.01986911049698392	0.020869645250570557
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.05s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1100': 76, '1011': 333, '0011': 408, '0111': 73, '0010': 908, '0000': 488, '1101': 104, '0110': 106, '1000': 155, '0101': 195, '1001': 184, '1010': 245, '1111': 178, '0001': 242, '1110': 156, '0100': 245}
Statevector([0.11914062+0.j, 0.05908203+0.j, 0.22167969+0.j,
             0.09960938+0.j, 0.05981445+0.j, 0.04760742+0.j,
             0.02587891+0.j, 0.01782227+0.j, 0.0378418 +0.j,
             0.04492188+0.j, 0.05981445+0.j, 0.08129883+0.j,
             0.01855469+0.j, 0.02539062+0.j, 0.03808594+0.j,
             0.04345703+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.13183594+0.j, 0.04492188+0.j, 0.29882812+0.j,
             0.09863281+0.j, 0.06542969+0.j, 0.04394531+0.j,
             0.00195312+0.j, 0.00585938+0.j, 0.015625  +0.j,
             0.02441406+0.j, 0.06445312+0.j, 0.10253906+0.j,
             0.0078125 +0.j, 0.00390625+0.j, 0.04003906+0.j,
             0.04980469+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.014019429820621099
================= Counts after running on backend =====================
{'1100': 59, '0100': 235, '0001': 188, '1111': 189, '0000': 570, '0010': 1098, '1110': 137, '0110': 63, '1000': 90, '0101': 177, '1001': 165, '1011': 361, '0011': 406, '0111': 64, '1010': 244, '1101': 50}
Statevector([0.13916016+0.j, 0.04589844+0.j, 0.26806641+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.14550781+0.j, 0.04003906+0.j, 0.28125   +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.017127920146776887
Fidelity Comparison	0.014019429820621099	0.017127920146776887
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.44s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0000': 114, '1100': 239, '0100': 340, '1101': 204, '1011': 418, '0111': 462, '0011': 176, '1010': 123, '1111': 495, '0001': 181, '0110': 378, '1000': 125, '1110': 245, '1001': 305, '0101': 168, '0010': 123}
Statevector([0.02783203+0.j, 0.04418945+0.j, 0.0300293 +0.j,
             0.04296875+0.j, 0.08300781+0.j, 0.04101562+0.j,
             0.09228516+0.j, 0.11279297+0.j, 0.03051758+0.j,
             0.07446289+0.j, 0.0300293 +0.j, 0.10205078+0.j,
             0.05834961+0.j, 0.04980469+0.j, 0.05981445+0.j,
             0.12084961+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00292969+0.j, 0.04003906+0.j, 0.0078125 +0.j,
             0.03710938+0.j, 0.109375  +0.j, 0.01660156+0.j,
             0.11132812+0.j, 0.1171875 +0.j, 0.01367188+0.j,
             0.07617188+0.j, 0.01855469+0.j, 0.12792969+0.j,
             0.05371094+0.j, 0.06152344+0.j, 0.05371094+0.j,
             0.15234375+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.007132649267305169
================= Counts after running on backend =====================
{'1010': 101, '0010': 89, '1111': 490, '0001': 186, '1011': 394, '0111': 524, '0011': 179, '1110': 256, '0100': 383, '0000': 107, '0101': 150, '1001': 281, '1100': 240, '1000': 109, '0110': 389, '1101': 218}
Statevector([0.02612305+0.j, 0.04541016+0.j, 0.02172852+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.01074219+0.j, 0.04101562+0.j, 0.00976562+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.00712846166811687
Fidelity Comparison	0.007132649267305169	0.00712846166811687
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.27s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f045d4dc1f0>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f045d3d0d00>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7f045cace840>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.49s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0010': 89, '1111': 100, '1101': 131, '1100': 347, '1000': 96, '0110': 350, '1110': 386, '1001': 562, '0101': 108, '1010': 314, '1011': 114, '0011': 555, '0111': 130, '0000': 317, '0001': 112, '0100': 385}
Statevector([0.07739258+0.j, 0.02734375+0.j, 0.02172852+0.j,
             0.13549805+0.j, 0.09399414+0.j, 0.02636719+0.j,
             0.08544922+0.j, 0.03173828+0.j, 0.0234375 +0.j,
             0.13720703+0.j, 0.07666016+0.j, 0.02783203+0.j,
             0.0847168 +0.j, 0.03198242+0.j, 0.09423828+0.j,
             0.02441406+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.06933594+0.j, 0.        +0.j, 0.        +0.j,
             0.18652344+0.j, 0.11425781+0.j, 0.00585938+0.j,
             0.10839844+0.j, 0.00390625+0.j, 0.        +0.j,
             0.20800781+0.j, 0.07324219+0.j, 0.        +0.j,
             0.11132812+0.j, 0.0078125 +0.j, 0.10742188+0.j,
             0.00390625+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.011019747501507027
================= Counts after running on backend =====================
{'0010': 89, '1111': 109, '0001': 74, '1010': 344, '1100': 397, '1011': 60, '0111': 107, '0011': 569, '0100': 416, '0000': 319, '1001': 574, '0101': 116, '1110': 392, '1000': 69, '0110': 352, '1101': 109}
Statevector([0.07788086+0.j, 0.01806641+0.j, 0.02172852+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.07324219+0.j, 0.        +0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.010931176949270593
Fidelity Comparison	0.011019747501507027	0.010931176949270593
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.12s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0011': 216, '0111': 117, '1111': 151, '0100': 195, '1110': 137, '0101': 231, '1001': 548, '1100': 98, '1101': 196, '1000': 197, '0110': 200, '0001': 400, '1010': 215, '0000': 408, '0010': 556, '1011': 231}
Statevector([0.09960938+0.j, 0.09765625+0.j, 0.13574219+0.j,
             0.05273438+0.j, 0.04760742+0.j, 0.05639648+0.j,
             0.04882812+0.j, 0.02856445+0.j, 0.0480957 +0.j,
             0.13378906+0.j, 0.05249023+0.j, 0.05639648+0.j,
             0.02392578+0.j, 0.04785156+0.j, 0.03344727+0.j,
             0.03686523+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.04785156+0.j, 0.05566406+0.j, 0.29882812+0.j,
             0.01757812+0.j, 0.01269531+0.j, 0.01855469+0.j,
             0.08300781+0.j, 0.00195312+0.j, 0.015625  +0.j,
             0.29199219+0.j, 0.03027344+0.j, 0.03125   +0.j,
             0.00097656+0.j, 0.07421875+0.j, 0.01171875+0.j,
             0.0078125 +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.010998934053588982
================= Counts after running on backend =====================
{'1010': 209, '1100': 59, '0001': 303, '1111': 86, '1101': 199, '0010': 900, '0000': 289, '0011': 141, '0111': 76, '1011': 220, '0101': 116, '1001': 885, '0110': 282, '1000': 153, '1110': 96, '0100': 82}
Statevector([0.07055664+0.j, 0.07397461+0.j, 0.21972656+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.04785156+0.j, 0.04589844+0.j, 0.296875  +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.02377575206628535
Fidelity Comparison	0.010998934053588982	0.02377575206628535
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.17s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1011': 27, '1000': 34, '0110': 30, '0001': 1752, '1111': 169, '0000': 283, '0010': 206, '1110': 219, '0101': 165, '1001': 164, '1100': 231, '1101': 414, '1010': 42, '0011': 286, '0111': 43, '0100': 31}
Statevector([0.0690918 +0.j, 0.42773438+0.j, 0.05029297+0.j,
             0.06982422+0.j, 0.00756836+0.j, 0.0402832 +0.j,
             0.00732422+0.j, 0.01049805+0.j, 0.00830078+0.j,
             0.04003906+0.j, 0.01025391+0.j, 0.0065918 +0.j,
             0.05639648+0.j, 0.10107422+0.j, 0.0534668 +0.j,
             0.04125977+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.02441406+0.j, 0.6796875 +0.j, 0.03222656+0.j,
             0.08300781+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.03515625+0.j, 0.04296875+0.j, 0.05957031+0.j,
             0.04296875+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.09679122454167555
================= Counts after running on backend =====================
{'0110': 10, '1000': 22, '0100': 12, '0001': 2060, '1111': 186, '1110': 246, '1011': 24, '0011': 409, '0111': 37, '1100': 153, '0101': 82, '1001': 105, '0010': 233, '0000': 245, '1101': 252, '1010': 20}
Statevector([0.05981445+0.j, 0.50292969+0.j, 0.05688477+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.03417969+0.j, 0.65625   +0.j, 0.05859375+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.12431707735436248
Fidelity Comparison	0.09679122454167555	0.12431707735436248
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.27s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f491d87fb80>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f491d56d180>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.49s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1111': 112, '1101': 144, '0010': 325, '0000': 176, '1100': 588, '1110': 407, '1001': 165, '0101': 93, '1010': 442, '0100': 126, '1011': 132, '0011': 134, '0111': 77, '0001': 87, '1000': 912, '0110': 176}
Statevector([0.04296875+0.j, 0.02124023+0.j, 0.0793457 +0.j,
             0.03271484+0.j, 0.03076172+0.j, 0.02270508+0.j,
             0.04296875+0.j, 0.01879883+0.j, 0.22265625+0.j,
             0.0402832 +0.j, 0.10791016+0.j, 0.03222656+0.j,
             0.14355469+0.j, 0.03515625+0.j, 0.09936523+0.j,
             0.02734375+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.00097656+0.j, 0.        +0.j, 0.07910156+0.j,
             0.01269531+0.j, 0.00097656+0.j, 0.00097656+0.j,
             0.0078125 +0.j, 0.        +0.j, 0.37792969+0.j,
             0.02734375+0.j, 0.10253906+0.j, 0.00488281+0.j,
             0.20996094+0.j, 0.00976562+0.j, 0.15722656+0.j,
             0.0078125 +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.022474358238980585
================= Counts after running on backend =====================
{'1011': 47, '0100': 58, '1100': 705, '0010': 285, '0000': 123, '1110': 556, '1001': 133, '0101': 69, '1010': 470, '1111': 77, '0001': 50, '1101': 96, '1000': 1214, '0110': 111, '0011': 61, '0111': 41}
Statevector([0.0300293 +0.j, 0.01220703+0.j, 0.06958008+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00292969+0.j, 0.        +0.j, 0.06738281+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.03696061766737557
Fidelity Comparison	0.022474358238980585	0.03696061766737557
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.37s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f55b63dbe80>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f55b62e7610>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7f55b5484ef0>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.52s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1010': 153, '1101': 288, '1011': 193, '0111': 173, '0011': 369, '0100': 244, '1100': 188, '1001': 235, '0101': 337, '1110': 282, '1000': 352, '0110': 240, '0001': 338, '1111': 116, '0000': 165, '0010': 423}
Statevector([0.0402832 +0.j, 0.08251953+0.j, 0.10327148+0.j,
             0.09008789+0.j, 0.05957031+0.j, 0.08227539+0.j,
             0.05859375+0.j, 0.04223633+0.j, 0.0859375 +0.j,
             0.05737305+0.j, 0.03735352+0.j, 0.04711914+0.j,
             0.04589844+0.j, 0.0703125 +0.j, 0.06884766+0.j,
             0.02832031+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.12695312+0.j, 0.12109375+0.j,
             0.11425781+0.j, 0.07421875+0.j, 0.17285156+0.j,
             0.04101562+0.j, 0.        +0.j, 0.14160156+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.03710938+0.j, 0.1015625 +0.j, 0.06933594+0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.0064172418215093785
================= Counts after running on backend =====================
{'0000': 96, '1110': 270, '0100': 322, '0001': 445, '1111': 62, '0111': 98, '0011': 419, '1011': 95, '1100': 167, '1010': 83, '1001': 108, '0101': 476, '1101': 349, '1000': 398, '0110': 209, '0010': 499}
Statevector([0.0234375 +0.j, 0.10864258+0.j, 0.12182617+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.13085938+0.j, 0.11621094+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.009037693764696542
Fidelity Comparison	0.0064172418215093785	0.009037693764696542
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.39s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1011': 229, '0010': 106, '1110': 575, '1010': 479, '0011': 109, '0111': 107, '1101': 135, '0000': 369, '0100': 405, '0101': 441, '1001': 127, '1100': 174, '0110': 101, '1000': 145, '0001': 348, '1111': 246}
Statevector([0.09008789+0.j, 0.08496094+0.j, 0.02587891+0.j,
             0.02661133+0.j, 0.09887695+0.j, 0.10766602+0.j,
             0.0246582 +0.j, 0.02612305+0.j, 0.03540039+0.j,
             0.03100586+0.j, 0.11694336+0.j, 0.0559082 +0.j,
             0.04248047+0.j, 0.03295898+0.j, 0.14038086+0.j,
             0.06005859+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.09570312+0.j, 0.07910156+0.j, 0.        +0.j,
             0.        +0.j, 0.14648438+0.j, 0.11523438+0.j,
             0.        +0.j, 0.        +0.j, 0.01074219+0.j,
             0.01660156+0.j, 0.17089844+0.j, 0.06152344+0.j,
             0.01074219+0.j, 0.01660156+0.j, 0.23925781+0.j,
             0.03710938+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.010685889024898643
================= Counts after running on backend =====================
{'1100': 154, '0010': 66, '0000': 366, '1101': 133, '1011': 222, '0111': 70, '0011': 64, '1010': 555, '0110': 71, '1000': 141, '0100': 459, '1110': 707, '1001': 139, '0101': 425, '1111': 173, '0001': 351}
Statevector([0.08935547+0.j, 0.08569336+0.j, 0.01611328+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.11035156+0.j, 0.10351562+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.012921002471614429
Fidelity Comparison	0.010685889024898643	0.012921002471614429
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.33s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0010': 45, '0001': 370, '1111': 150, '1100': 159, '0110': 48, '1000': 140, '1001': 1884, '0101': 110, '1110': 69, '1011': 84, '0111': 136, '0011': 44, '0100': 181, '1101': 148, '1010': 446, '0000': 82}
Statevector([0.02001953+0.j, 0.09033203+0.j, 0.01098633+0.j,
             0.01074219+0.j, 0.04418945+0.j, 0.02685547+0.j,
             0.01171875+0.j, 0.03320312+0.j, 0.03417969+0.j,
             0.45996094+0.j, 0.10888672+0.j, 0.02050781+0.j,
             0.03881836+0.j, 0.03613281+0.j, 0.0168457 +0.j,
             0.03662109+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.0625    +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.01855469+0.j, 0.        +0.j,
             0.68652344+0.j, 0.15917969+0.j, 0.0078125 +0.j,
             0.01464844+0.j, 0.00195312+0.j, 0.        +0.j,
             0.04882812+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.11693383767629939
================= Counts after running on backend =====================
{'0010': 51, '1110': 53, '1100': 129, '0001': 404, '1111': 171, '1010': 457, '0100': 155, '1101': 156, '1000': 131, '0110': 49, '0111': 139, '0011': 36, '1011': 80, '0000': 98, '1001': 1893, '0101': 94}
Statevector([0.02392578+0.j, 0.09863281+0.j, 0.01245117+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.08496094+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.11573292202280072
Fidelity Comparison	0.11693383767629939	0.11573292202280072
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.23s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7fda3f61ba90>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fda3f50c070>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.50s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1011': 246, '1100': 222, '0001': 455, '1111': 389, '0011': 474, '0111': 209, '0100': 185, '0101': 252, '1001': 177, '0010': 207, '0000': 217, '1010': 165, '1000': 390, '0110': 176, '1101': 169, '1110': 163}
Statevector([0.05297852+0.j, 0.11108398+0.j, 0.05053711+0.j,
             0.11572266+0.j, 0.04516602+0.j, 0.06152344+0.j,
             0.04296875+0.j, 0.05102539+0.j, 0.09521484+0.j,
             0.04321289+0.j, 0.0402832 +0.j, 0.06005859+0.j,
             0.05419922+0.j, 0.04125977+0.j, 0.03979492+0.j,
             0.0949707 +0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.17382812+0.j, 0.        +0.j,
             0.19433594+0.j, 0.        +0.j, 0.04589844+0.j,
             0.        +0.j, 0.07128906+0.j, 0.17382812+0.j,
             0.        +0.j, 0.        +0.j, 0.05761719+0.j,
             0.05273438+0.j, 0.        +0.j, 0.        +0.j,
             0.23046875+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.008652225486059706
================= Counts after running on backend =====================
{'0010': 175, '1010': 107, '0001': 531, '1111': 531, '0000': 200, '1011': 234, '0011': 598, '0111': 239, '0100': 139, '1101': 101, '0110': 138, '1000': 433, '1100': 198, '0101': 210, '1001': 143, '1110': 119}
Statevector([0.04882812+0.j, 0.12963867+0.j, 0.04272461+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.18359375+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.013026913220585357
Fidelity Comparison	0.008652225486059706	0.013026913220585357
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.17s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1011': 84, '1100': 155, '1101': 284, '0000': 276, '0010': 450, '0001': 254, '1111': 232, '1001': 103, '0101': 670, '1110': 375, '0110': 198, '1000': 396, '0100': 105, '0011': 210, '0111': 122, '1010': 182}
Statevector([0.06738281+0.j, 0.06201172+0.j, 0.10986328+0.j,
             0.05126953+0.j, 0.02563477+0.j, 0.16357422+0.j,
             0.04833984+0.j, 0.02978516+0.j, 0.09667969+0.j,
             0.02514648+0.j, 0.04443359+0.j, 0.02050781+0.j,
             0.0378418 +0.j, 0.06933594+0.j, 0.09155273+0.j,
             0.05664062+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.21386719+0.j,
             0.        +0.j, 0.        +0.j, 0.39550781+0.j,
             0.04296875+0.j, 0.        +0.j, 0.12304688+0.j,
             0.        +0.j, 0.03222656+0.j, 0.        +0.j,
             0.015625  +0.j, 0.06445312+0.j, 0.11230469+0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.014146297233367022
================= Counts after running on backend =====================
{'1111': 149, '1011': 58, '0001': 201, '1001': 116, '0101': 934, '1110': 374, '0010': 624, '0000': 209, '0111': 55, '0011': 147, '1100': 154, '1101': 237, '1000': 420, '0110': 193, '1010': 126, '0100': 99}
Statevector([0.05102539+0.j, 0.04907227+0.j, 0.15234375+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00292969+0.j, 0.        +0.j, 0.1953125 +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.024272038069796054
Fidelity Comparison	0.014146297233367022	0.024272038069796054
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.20s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7fbb8304b400>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fbb82d932b0>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.52s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1011': 72, '1111': 258, '1010': 68, '0111': 459, '0011': 59, '0100': 599, '1110': 486, '1001': 70, '0101': 502, '1101': 466, '1100': 228, '0110': 553, '1000': 68, '0001': 64, '0010': 76, '0000': 68}
Statevector([0.01660156+0.j, 0.015625  +0.j, 0.01855469+0.j,
             0.0144043 +0.j, 0.14624023+0.j, 0.12255859+0.j,
             0.13500977+0.j, 0.11206055+0.j, 0.01660156+0.j,
             0.01708984+0.j, 0.01660156+0.j, 0.01757812+0.j,
             0.05566406+0.j, 0.11376953+0.j, 0.11865234+0.j,
             0.06298828+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.16601562+0.j, 0.13769531+0.j,
             0.17285156+0.j, 0.13671875+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.02832031+0.j, 0.1640625 +0.j, 0.1484375 +0.j,
             0.04589844+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.01453389210161049
================= Counts after running on backend =====================
{'0000': 93, '1011': 76, '0100': 582, '1110': 475, '0101': 477, '1001': 87, '1100': 233, '1111': 217, '0001': 73, '1101': 466, '1000': 93, '0110': 553, '0010': 79, '0011': 59, '0111': 456, '1010': 77}
Statevector([0.02270508+0.j, 0.01782227+0.j, 0.01928711+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.01380727421752681
Fidelity Comparison	0.01453389210161049	0.01380727421752681
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.16s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0001': 113, '1110': 77, '1111': 131, '0101': 121, '1001': 815, '1100': 438, '1000': 95, '0110': 598, '1101': 68, '1010': 105, '1011': 95, '0011': 1019, '0111': 128, '0100': 64, '0000': 91, '0010': 138}
Statevector([0.0222168 +0.j, 0.02758789+0.j, 0.03369141+0.j,
             0.2487793 +0.j, 0.015625  +0.j, 0.02954102+0.j,
             0.14599609+0.j, 0.03125   +0.j, 0.02319336+0.j,
             0.19897461+0.j, 0.02563477+0.j, 0.02319336+0.j,
             0.10693359+0.j, 0.01660156+0.j, 0.01879883+0.j,
             0.03198242+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.375     +0.j, 0.        +0.j, 0.        +0.j,
             0.18261719+0.j, 0.        +0.j, 0.        +0.j,
             0.296875  +0.j, 0.        +0.j, 0.        +0.j,
             0.14550781+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.037862891345866956
================= Counts after running on backend =====================
{'0000': 62, '0100': 53, '1110': 51, '1011': 57, '0011': 1126, '0111': 65, '1100': 521, '1101': 82, '1000': 67, '0110': 645, '1010': 72, '0001': 66, '1111': 109, '1001': 935, '0101': 107, '0010': 78}
Statevector([0.01513672+0.j, 0.01611328+0.j, 0.01904297+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.0457171488997119
Fidelity Comparison	0.037862891345866956	0.0457171488997119
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.12s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 16, '1010': 5, '1100': 20, '0111': 258, '0011': 2451, '1011': 176, '1101': 24, '0001': 560, '1111': 77, '0110': 105, '1000': 23, '0000': 44, '0010': 108, '1001': 98, '0101': 107, '0100': 24}
Statevector([0.01074219+0.j, 0.13671875+0.j, 0.02636719+0.j,
             0.59838867+0.j, 0.00585938+0.j, 0.02612305+0.j,
             0.02563477+0.j, 0.06298828+0.j, 0.00561523+0.j,
             0.02392578+0.j, 0.0012207 +0.j, 0.04296875+0.j,
             0.00488281+0.j, 0.00585938+0.j, 0.00390625+0.j,
             0.01879883+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.15234375+0.j, 0.        +0.j,
             0.84765625+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.2788432919705883
================= Counts after running on backend =====================
{'1010': 9, '0100': 65, '1110': 15, '0011': 2676, '0111': 182, '1011': 86, '0001': 553, '1111': 43, '1101': 12, '0000': 38, '0010': 146, '0110': 101, '1000': 25, '1100': 25, '1001': 45, '0101': 75}
Statevector([0.00927734+0.j, 0.13500977+0.j, 0.03564453+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.      +0.j, 0.140625+0.j, 0.      +0.j, ..., 0.      +0.j,
             0.      +0.j, 0.      +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.3369023419363657
Fidelity Comparison	0.2788432919705883	0.3369023419363657
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.13s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0010': 82, '0100': 360, '1100': 1369, '0001': 157, '1111': 64, '1110': 191, '1001': 179, '0101': 147, '1000': 136, '0110': 586, '1101': 313, '1011': 85, '0111': 138, '0011': 71, '1010': 68, '0000': 150}
Statevector([0.03662109+0.j, 0.03833008+0.j, 0.02001953+0.j,
             0.01733398+0.j, 0.08789062+0.j, 0.03588867+0.j,
             0.14306641+0.j, 0.03369141+0.j, 0.03320312+0.j,
             0.04370117+0.j, 0.01660156+0.j, 0.02075195+0.j,
             0.33422852+0.j, 0.07641602+0.j, 0.04663086+0.j,
             0.015625  +0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.29101562+0.j, 0.0390625 +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.58300781+0.j, 0.08691406+0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.05975584763314146
================= Counts after running on backend =====================
{'1010': 43, '1111': 39, '1100': 1709, '1101': 309, '1000': 121, '0110': 714, '0010': 75, '0000': 188, '0001': 141, '0100': 233, '1001': 113, '0101': 81, '1110': 118, '0011': 41, '0111': 135, '1011': 36}
Statevector([0.04589844+0.j, 0.03442383+0.j, 0.01831055+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.09627151162226255
Fidelity Comparison	0.05975584763314146	0.09627151162226255
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py: 16 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 30 warnings in 9.39s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0001': 52, '1010': 76, '0011': 56, '0111': 279, '1011': 59, '1101': 913, '1110': 751, '0101': 197, '1001': 56, '0110': 769, '1000': 29, '1100': 350, '0010': 72, '0000': 58, '1111': 298, '0100': 81}
Statevector([0.01416016+0.j, 0.01269531+0.j, 0.01757812+0.j,
             0.01367188+0.j, 0.01977539+0.j, 0.0480957 +0.j,
             0.18774414+0.j, 0.06811523+0.j, 0.00708008+0.j,
             0.01367188+0.j, 0.01855469+0.j, 0.0144043 +0.j,
             0.08544922+0.j, 0.22290039+0.j, 0.18334961+0.j,
             0.07275391+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.01757812+0.j, 0.0390625 +0.j,
             0.24707031+0.j, 0.05859375+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.06835938+0.j, 0.28613281+0.j, 0.21875   +0.j,
             0.06445312+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.027895946874195943
================= Counts after running on backend =====================
{'0001': 47, '0000': 47, '1000': 29, '0110': 785, '1101': 892, '1100': 314, '1110': 795, '1001': 45, '0101': 252, '1010': 55, '1011': 47, '0111': 261, '0011': 58, '1111': 307, '0100': 103, '0010': 59}
Statevector([0.01147461+0.j, 0.01147461+0.j, 0.0144043 +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.+0.j, 0.+0.j, 0.+0.j, ..., 0.+0.j, 0.+0.j, 0.+0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.02787978194697871
Fidelity Comparison	0.027895946874195943	0.02787978194697871
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.10s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7fae35da3d90>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fae35e23250>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7fae33dafbf0>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.52s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1100': 56, '1011': 704, '0011': 908, '0111': 115, '0000': 431, '0010': 379, '0110': 63, '1000': 367, '0101': 55, '1001': 130, '1101': 58, '1110': 95, '1010': 425, '0100': 81, '0001': 127, '1111': 102}
Statevector([0.10522461+0.j, 0.03100586+0.j, 0.0925293 +0.j,
             0.22167969+0.j, 0.01977539+0.j, 0.01342773+0.j,
             0.01538086+0.j, 0.02807617+0.j, 0.08959961+0.j,
             0.03173828+0.j, 0.10375977+0.j, 0.171875  +0.j,
             0.01367188+0.j, 0.01416016+0.j, 0.02319336+0.j,
             0.02490234+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.10742188+0.j, 0.01464844+0.j, 0.109375  +0.j,
             0.24902344+0.j, 0.00585938+0.j, 0.        +0.j,
             0.00292969+0.j, 0.015625  +0.j, 0.12011719+0.j,
             0.02246094+0.j, 0.1015625 +0.j, 0.23144531+0.j,
             0.        +0.j, 0.00097656+0.j, 0.01464844+0.j,
             0.00390625+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.019579006479034433
================= Counts after running on backend =====================
{'0100': 56, '1100': 33, '1011': 736, '0011': 932, '0111': 104, '0101': 26, '1001': 162, '0010': 402, '0000': 468, '1010': 398, '1110': 115, '1101': 59, '1000': 385, '0110': 54, '1111': 56, '0001': 110}
Statevector([0.11425781+0.j, 0.02685547+0.j, 0.09814453+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.12011719+0.j, 0.0078125 +0.j, 0.07910156+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.02166155498707667
Fidelity Comparison	0.019579006479034433	0.02166155498707667
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.08s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0110': 235, '1000': 266, '1100': 274, '1010': 240, '0010': 272, '0000': 271, '0100': 270, '1110': 266, '1001': 230, '0101': 234, '1111': 236, '0001': 284, '1101': 280, '1011': 240, '0011': 227, '0111': 271}
Statevector([0.06616211+0.j, 0.06933594+0.j, 0.06640625+0.j,
             0.05541992+0.j, 0.06591797+0.j, 0.05712891+0.j,
             0.05737305+0.j, 0.06616211+0.j, 0.06494141+0.j,
             0.05615234+0.j, 0.05859375+0.j, 0.05859375+0.j,
             0.06689453+0.j, 0.06835938+0.j, 0.06494141+0.j,
             0.05761719+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.0703125 +0.j, 0.06054688+0.j, 0.078125  +0.j,
             0.06054688+0.j, 0.06933594+0.j, 0.05859375+0.j,
             0.0625    +0.j, 0.05761719+0.j, 0.05859375+0.j,
             0.0546875 +0.j, 0.05761719+0.j, 0.0703125 +0.j,
             0.05664062+0.j, 0.06054688+0.j, 0.06054688+0.j,
             0.06347656+0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.00391856805487123
================= Counts after running on backend =====================
{'1100': 250, '0011': 264, '0111': 256, '1101': 268, '1011': 251, '0110': 253, '1000': 278, '0001': 237, '1111': 232, '0100': 263, '0010': 254, '0000': 265, '1110': 255, '1001': 225, '0101': 271, '1010': 274}
Statevector([0.06469727+0.j, 0.05786133+0.j, 0.06201172+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.06640625+0.j, 0.06347656+0.j, 0.05761719+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.003922628607654133
Fidelity Comparison	0.00391856805487123	0.003922628607654133
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.31s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0100': 90, '0010': 199, '1010': 803, '0000': 168, '1110': 217, '1100': 205, '0110': 89, '1000': 291, '0101': 205, '1001': 334, '0001': 236, '1111': 303, '1011': 519, '0111': 144, '0011': 148, '1101': 145}
Statevector([0.04101562+0.j, 0.05761719+0.j, 0.04858398+0.j,
             0.03613281+0.j, 0.02197266+0.j, 0.05004883+0.j,
             0.02172852+0.j, 0.03515625+0.j, 0.07104492+0.j,
             0.08154297+0.j, 0.19604492+0.j, 0.12670898+0.j,
             0.05004883+0.j, 0.03540039+0.j, 0.05297852+0.j,
             0.07397461+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.01660156+0.j, 0.        +0.j, 0.00683594+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.11035156+0.j,
             0.04101562+0.j, 0.54589844+0.j, 0.27929688+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.02390348969589695
================= Counts after running on backend =====================
{'1111': 148, '0000': 177, '0110': 42, '1000': 378, '1100': 80, '1010': 1514, '1001': 288, '0101': 69, '1110': 100, '1011': 769, '0011': 104, '0111': 40, '0100': 30, '1101': 47, '0010': 199, '0001': 111}
Statevector([0.04321289+0.j, 0.02709961+0.j, 0.04858398+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.01171875+0.j, 0.        +0.j, 0.01171875+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.07293166466206458
Fidelity Comparison	0.02390348969589695	0.07293166466206458
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.43s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1100': 44, '1111': 46, '0111': 19, '0011': 229, '1011': 48, '0001': 1274, '0010': 1043, '0000': 879, '0100': 85, '1001': 66, '0101': 99, '1110': 57, '1101': 38, '1000': 72, '0110': 50, '1010': 47}
Statevector([0.21459961+0.j, 0.31103516+0.j, 0.25463867+0.j,
             0.0559082 +0.j, 0.02075195+0.j, 0.02416992+0.j,
             0.01220703+0.j, 0.00463867+0.j, 0.01757812+0.j,
             0.01611328+0.j, 0.01147461+0.j, 0.01171875+0.j,
             0.01074219+0.j, 0.00927734+0.j, 0.01391602+0.j,
             0.01123047+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.23632812+0.j, 0.43359375+0.j, 0.30371094+0.j,
             0.02636719+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.06990181560126985
================= Counts after running on backend =====================
{'1101': 36, '1110': 58, '0010': 990, '0000': 888, '0001': 1301, '1111': 38, '0111': 28, '0011': 241, '1011': 50, '0101': 89, '1001': 68, '0110': 55, '1000': 98, '1100': 36, '0100': 74, '1010': 46}
Statevector([0.21679688+0.j, 0.31762695+0.j, 0.24169922+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.24023438+0.j, 0.42578125+0.j, 0.31054688+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.06956913346948568
Fidelity Comparison	0.06990181560126985	0.06956913346948568
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.14s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f8d24cdc2e0>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f8d24bd70a0>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.53s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1110': 82, '0001': 231, '1111': 80, '0010': 1179, '0000': 268, '0111': 73, '0011': 1144, '1011': 352, '1001': 89, '0101': 72, '1101': 47, '1100': 71, '0110': 87, '1000': 83, '0100': 87, '1010': 151}
Statevector([0.06542969+0.j, 0.05639648+0.j, 0.2878418 +0.j,
             0.27929688+0.j, 0.02124023+0.j, 0.01757812+0.j,
             0.02124023+0.j, 0.01782227+0.j, 0.02026367+0.j,
             0.02172852+0.j, 0.03686523+0.j, 0.0859375 +0.j,
             0.01733398+0.j, 0.01147461+0.j, 0.02001953+0.j,
             0.01953125+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.015625  +0.j, 0.00585938+0.j, 0.42480469+0.j,
             0.41503906+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.00585938+0.j, 0.        +0.j, 0.12988281+0.j,
             0.        +0.j, 0.        +0.j, 0.00292969+0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.0629489109215342
================= Counts after running on backend =====================
{'1101': 19, '1011': 368, '0011': 1336, '0111': 59, '0010': 1301, '0000': 223, '1110': 84, '1001': 78, '0101': 60, '1100': 49, '0110': 49, '1000': 67, '0001': 204, '1111': 58, '0100': 50, '1010': 91}
Statevector([0.05444336+0.j, 0.04980469+0.j, 0.31762695+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.00488281+0.j, 0.00488281+0.j, 0.42285156+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.08335105385413044
Fidelity Comparison	0.0629489109215342	0.08335105385413044
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.14s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0010': 52, '1110': 87, '1011': 78, '0011': 60, '0111': 46, '0100': 1065, '0001': 250, '1111': 47, '1101': 265, '1100': 358, '0110': 91, '1000': 384, '1001': 212, '0101': 659, '0000': 358, '1010': 84}
Statevector([0.08740234+0.j, 0.06103516+0.j, 0.01269531+0.j,
             0.01464844+0.j, 0.26000977+0.j, 0.16088867+0.j,
             0.0222168 +0.j, 0.01123047+0.j, 0.09375   +0.j,
             0.05175781+0.j, 0.02050781+0.j, 0.01904297+0.j,
             0.08740234+0.j, 0.06469727+0.j, 0.02124023+0.j,
             0.01147461+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.01074219+0.j, 0.05566406+0.j, 0.        +0.j,
             0.        +0.j, 0.48339844+0.j, 0.30273438+0.j,
             0.        +0.j, 0.        +0.j, 0.09472656+0.j,
             0.00195312+0.j, 0.        +0.j, 0.        +0.j,
             0.04394531+0.j, 0.00683594+0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.03686250148007275
================= Counts after running on backend =====================
{'1111': 12, '1011': 22, '1010': 37, '0000': 196, '0010': 31, '1100': 299, '1001': 114, '0101': 919, '1110': 38, '0100': 1449, '0001': 260, '0111': 41, '0011': 34, '1000': 381, '0110': 85, '1101': 178}
Statevector([0.04785156+0.j, 0.06347656+0.j, 0.00756836+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.01367188+0.j, 0.07519531+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.059883202089849874
Fidelity Comparison	0.03686250148007275	0.059883202089849874
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.29s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'0100': 64, '1110': 32, '0001': 823, '1111': 160, '0010': 1226, '0000': 271, '0101': 90, '1001': 525, '1100': 62, '1010': 119, '0011': 130, '0111': 166, '1011': 49, '1000': 210, '0110': 71, '1101': 98}
Statevector([0.06616211+0.j, 0.20092773+0.j, 0.29931641+0.j,
             0.03173828+0.j, 0.015625  +0.j, 0.02197266+0.j,
             0.01733398+0.j, 0.04052734+0.j, 0.05126953+0.j,
             0.12817383+0.j, 0.02905273+0.j, 0.01196289+0.j,
             0.01513672+0.j, 0.02392578+0.j, 0.0078125 +0.j,
             0.0390625 +0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.29785156+0.j, 0.50683594+0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.1953125 +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.055972415764301786
================= Counts after running on backend =====================
{'1100': 32, '0100': 39, '0010': 1470, '0000': 207, '1111': 121, '0001': 851, '0110': 56, '1000': 131, '1010': 151, '1001': 682, '0101': 65, '1110': 21, '0111': 105, '0011': 61, '1011': 43, '1101': 61}
Statevector([0.05053711+0.j, 0.20776367+0.j, 0.35888672+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.29980469+0.j, 0.48242188+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.07381189945641609
Fidelity Comparison	0.055972415764301786	0.07381189945641609
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.27s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7f29f9580430>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7f29f92ef3d0>]
cmap_conf = [None], backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (1) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.49s =========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py ================= Counts after running on backend =====================
{'1010': 37, '1100': 34, '1110': 69, '0001': 1712, '1111': 120, '0011': 302, '0111': 162, '1011': 104, '1101': 160, '0000': 131, '0010': 68, '0110': 135, '1000': 68, '0100': 54, '1001': 825, '0101': 115}
Statevector([0.03198242+0.j, 0.41796875+0.j, 0.01660156+0.j,
             0.07373047+0.j, 0.01318359+0.j, 0.02807617+0.j,
             0.03295898+0.j, 0.03955078+0.j, 0.01660156+0.j,
             0.20141602+0.j, 0.0090332 +0.j, 0.02539062+0.j,
             0.00830078+0.j, 0.0390625 +0.j, 0.0168457 +0.j,
             0.02929688+0.j],
            dims=(2, 2, 2, 2))
Statevector([0.        +0.j, 0.66796875+0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.33203125+0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j, 0.        +0.j, 0.        +0.j,
             0.        +0.j],
            dims=(2, 2, 2, 2))
=================== Reliability =======================
0.1197620050597834
================= Counts after running on backend =====================
{'1100': 23, '0010': 35, '1010': 15, '1011': 61, '0111': 122, '0011': 213, '0001': 1955, '1111': 68, '1101': 114, '1000': 34, '0110': 83, '0000': 84, '1001': 1143, '0101': 90, '1110': 36, '0100': 20}
Statevector([0.02050781+0.j, 0.47729492+0.j, 0.00854492+0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
Statevector([0.        +0.j, 0.67578125+0.j, 0.        +0.j, ...,
             0.        +0.j, 0.        +0.j, 0.        +0.j],
            dims=(2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2))
=================== Reliability =======================
0.17058641884068493
Fidelity Comparison	0.1197620050597834	0.17058641884068493
.

=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/providers/fake_provider/fake_backend.py:462: PendingDeprecationWarning: "warnings" argument will be deprecated as part of the qiskit-aer 0.12.0 and subsequently removed
    noise_model = NoiseModel.from_backend(self, warnings=False)

qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (210788.50669687917 > 2 * 104325.12715207216). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py: 10 warnings
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (196328.6961892367 > 2 * 96478.49546055387). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00021078850669687914 > 2 * 0.00010432512715207217). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

qvm/bench_test.py::TestQvm::test_single_bench[random]
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/noise/device/models.py:365: UserWarning: Device model returned an invalid T_2 relaxation time greater than the theoretical maximum value 2 * T_1 (0.00019632869618923672 > 2 * 9.647849546055387e-05). Truncating to maximum value.
    warn("Device model returned an invalid T_2 relaxation time greater than"

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
======================== 1 passed, 23 warnings in 9.48s ========================
============================= test session starts ==============================
platform linux -- Python 3.10.6, pytest-7.2.0, pluggy-1.0.0
rootdir: /root/projects/qcs
collected 1 item

qvm/bench_test.py F

=================================== FAILURES ===================================
______________________ TestQvm.test_single_bench[random] _______________________

self = <qvm.bench_test.TestQvm object at 0x7fee0f45f1f0>, bench = 'random'

    def test_single_bench(self, bench):
        #circ = self.create_dummy_bell_state((0,1))
        circ = self.get_small_bench_circ(bench)
        cu = self._backend_manager.allocate(circ)
>       fid_qvm = self.run_on_backend_and_get_fid(circ, cu.backend)

qvm/bench_test.py:35: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
qvm/test/base.py:80: in run_on_backend_and_get_fid
    trans = transpile(circ, backend)
/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:360: in transpile
    _check_circuits_coupling_map(circuits, cmap_conf, backend)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

circuits = [<qiskit.circuit.quantumcircuit.QuantumCircuit object at 0x7fee0f3f4070>]
cmap_conf = [<qiskit.transpiler.coupling.CouplingMap object at 0x7fee0e4b3560>]
backend = <FakeCairo('fake_cairo')>

    def _check_circuits_coupling_map(circuits, cmap_conf, backend):
        # Check circuit width against number of qubits in coupling_map(s)
        coupling_maps_list = cmap_conf
        for circuit, parsed_coupling_map in zip(circuits, coupling_maps_list):
            # If coupling_map is not None or num_qubits == 1
            num_qubits = len(circuit.qubits)
            max_qubits = None
            if isinstance(parsed_coupling_map, CouplingMap):
                max_qubits = parsed_coupling_map.size()
    
            # If coupling_map is None, the limit might be in the backend (like in 1Q devices)
            elif backend is not None:
                backend_version = getattr(backend, "version", 0)
                if backend_version <= 1:
                    if not backend.configuration().simulator:
                        max_qubits = backend.configuration().n_qubits
                else:
                    max_qubits = backend.num_qubits
    
            if max_qubits is not None and (num_qubits > max_qubits):
>               raise TranspilerError(
                    f"Number of qubits ({num_qubits}) in {circuit.name} "
                    f"is greater than maximum ({max_qubits}) in the coupling_map"
                )
E               qiskit.transpiler.exceptions.TranspilerError: 'Number of qubits (4) in circuit-88 is greater than maximum (2) in the coupling_map'

/root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit/compiler/transpiler.py:422: TranspilerError
=============================== warnings summary ===============================
../../anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178
  /root/anaconda3/envs/qcs-noise/lib/python3.10/site-packages/qiskit_aer/backends/statevector_simulator.py:178: PendingDeprecationWarning: The `StatevectorSimulator` backend will be deprecated in the future. It has been superseded by the `AerSimulator` backend. To obtain legacy functionality initialize with `AerSimulator(method="statevector")` and append run circuits with the `save_state` instruction.
    warn('The `StatevectorSimulator` backend will be deprecated in the'

-- Docs: https://docs.pytest.org/en/stable/how-to/capture-warnings.html
=========================== short test summary info ============================
FAILED qvm/bench_test.py::TestQvm::test_single_bench[random] - qiskit.transpi...
========================= 1 failed, 1 warning in 2.50s =========================
